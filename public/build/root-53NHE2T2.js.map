{
  "version": 3,
  "sources": ["../../app/root.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/root.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/root.tsx\");\n}\n// REMIX HMR END\n\nimport { captureRemixErrorBoundaryError, withSentry } from '@sentry/remix';\nimport { isRouteErrorResponse, useRouteError, Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration } from '@remix-run/react';\nimport stylesheet from '~/styles/tailwind.css';\nimport logo from '~/assets/Logos/BrowserIcon.svg';\nexport const links = () => [{\n  rel: 'stylesheet',\n  href: stylesheet\n}];\nfunction App() {\n  return <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <title>Assetnest 2</title>\n        <link rel=\"icon\" type=\"image/x-icon\" href={logo} />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>;\n}\n//stolen from https://remix.run/docs/en/main/pages/v2#catchboundary-and-errorboundary\n_c = App;\nexport const ErrorBoundary = () => {\n  _s();\n  const error = useRouteError();\n  captureRemixErrorBoundaryError(error);\n\n  // when true, this is what used to go to `CatchBoundary`\n  if (isRouteErrorResponse(error)) {\n    return <div>\n        <h1>Oops</h1>\n        <p>Status: {error.status}</p>\n        <p>{error.data.message}</p>\n      </div>;\n  }\n\n  // Don't forget to typecheck with your own logic.\n  // Any value can be thrown, not just errors!\n  let errorMessage = 'Unknown error';\n  if (error instanceof Error) {\n    errorMessage = error.message;\n  }\n  return <div>\n      <h1>Uh oh ...</h1>\n      <p>Something went wrong.</p>\n      <pre>{errorMessage}</pre>\n    </div>;\n};\n_s(ErrorBoundary, \"oAgjgbJzsRXlB89+MoVumxMQqKM=\", false, function () {\n  return [useRouteError];\n});\n_c2 = ErrorBoundary;\nexport default _c3 = withSentry(App);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ErrorBoundary\");\n$RefreshReg$(_c3, \"%default%\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
