{
  "version": 3,
  "sources": ["../../../app/components/ui/shadUi/ui/dropdown-menu.tsx", "../../../node_modules/@radix-ui/react-menu/dist/packages/react/menu/src/index.ts", "../../../node_modules/@radix-ui/react-menu/dist/packages/react/menu/src/Menu.tsx", "../../../node_modules/@radix-ui/react-dropdown-menu/dist/packages/react/dropdown-menu/src/index.ts", "../../../node_modules/@radix-ui/react-dropdown-menu/dist/packages/react/dropdown-menu/src/DropdownMenu.tsx", "../../../app/components/ui/DropdownMenu.tsx", "../../../app/components/ui/shadUi/ui/table.tsx", "../../../app/components/ui/Table.tsx", "../../../app/components/ui/TableSelectBottomBar.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ui/shadUi/ui/dropdown-menu.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ui/shadUi/ui/dropdown-menu.tsx\");\n  import.meta.hot.lastModified = \"1705519263366.5361\";\n}\n// REMIX HMR END\n\nimport * as React from 'react';\nimport * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';\nimport { Check, ChevronRight, Circle } from 'lucide-react';\nimport { cn } from '~/components/ui/shadUi/utils';\nconst DropdownMenuShad = DropdownMenuPrimitive.Root;\nconst DropdownMenuTriggerShad = DropdownMenuPrimitive.Trigger;\nconst DropdownMenuGroupShad = DropdownMenuPrimitive.Group;\nconst DropdownMenuPortalShad = DropdownMenuPrimitive.Portal;\nconst DropdownMenuSubShad = DropdownMenuPrimitive.Sub;\nconst DropdownMenuRadioGroupShad = DropdownMenuPrimitive.RadioGroup;\nconst DropdownMenuSubTriggerShad = React.forwardRef(_c = ({\n  className,\n  inset,\n  children,\n  ...props\n}, ref) => <DropdownMenuPrimitive.SubTrigger ref={ref} className={cn('flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent', inset && 'pl-8', className)} {...props}>\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>);\n_c2 = DropdownMenuSubTriggerShad;\nDropdownMenuSubTriggerShad.displayName = DropdownMenuPrimitive.SubTrigger.displayName;\nconst DropdownMenuSubContentShad = React.forwardRef(_c3 = ({\n  className,\n  ...props\n}, ref) => <DropdownMenuPrimitive.SubContent ref={ref} className={cn('z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2', className)} {...props} />);\n_c4 = DropdownMenuSubContentShad;\nDropdownMenuSubContentShad.displayName = DropdownMenuPrimitive.SubContent.displayName;\nconst DropdownMenuContentShad = React.forwardRef(_c5 = ({\n  className,\n  sideOffset = 4,\n  ...props\n}, ref) => <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content ref={ref} sideOffset={sideOffset} className={cn('z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2', className)} {...props} />\n  </DropdownMenuPrimitive.Portal>);\n_c6 = DropdownMenuContentShad;\nDropdownMenuContentShad.displayName = DropdownMenuPrimitive.Content.displayName;\nconst DropdownMenuItemShad = React.forwardRef(_c7 = ({\n  className,\n  inset,\n  ...props\n}, ref) => <DropdownMenuPrimitive.Item ref={ref} className={cn('relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50', inset && 'pl-8', className)} {...props} />);\n_c8 = DropdownMenuItemShad;\nDropdownMenuItemShad.displayName = DropdownMenuPrimitive.Item.displayName;\nconst DropdownMenuCheckboxItemShad = React.forwardRef(_c9 = ({\n  className,\n  children,\n  checked,\n  ...props\n}, ref) => <DropdownMenuPrimitive.CheckboxItem ref={ref} className={cn('relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50', className)} checked={checked} {...props}>\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>);\n_c10 = DropdownMenuCheckboxItemShad;\nDropdownMenuCheckboxItemShad.displayName = DropdownMenuPrimitive.CheckboxItem.displayName;\nconst DropdownMenuRadioItemShad = React.forwardRef(_c11 = ({\n  className,\n  children,\n  ...props\n}, ref) => <DropdownMenuPrimitive.RadioItem ref={ref} className={cn('relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50', className)} {...props}>\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>);\n_c12 = DropdownMenuRadioItemShad;\nDropdownMenuRadioItemShad.displayName = DropdownMenuPrimitive.RadioItem.displayName;\nconst DropdownMenuLabelShad = React.forwardRef(_c13 = ({\n  className,\n  inset,\n  ...props\n}, ref) => <DropdownMenuPrimitive.Label ref={ref} className={cn('px-2 py-1.5 text-sm font-semibold', inset && 'pl-8', className)} {...props} />);\n_c14 = DropdownMenuLabelShad;\nDropdownMenuLabelShad.displayName = DropdownMenuPrimitive.Label.displayName;\nconst DropdownMenuSeparatorShad = React.forwardRef(_c15 = ({\n  className,\n  ...props\n}, ref) => <DropdownMenuPrimitive.Separator ref={ref} className={cn('-mx-1 my-1 h-px bg-muted', className)} {...props} />);\n_c16 = DropdownMenuSeparatorShad;\nDropdownMenuSeparatorShad.displayName = DropdownMenuPrimitive.Separator.displayName;\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}) => {\n  return <span className={cn('ml-auto text-xs tracking-widest opacity-60', className)} {...props} />;\n};\n_c17 = DropdownMenuShortcut;\nDropdownMenuShortcut.displayName = 'DropdownMenuShortcut';\nexport { DropdownMenuShad, DropdownMenuTriggerShad, DropdownMenuContentShad, DropdownMenuItemShad, DropdownMenuCheckboxItemShad, DropdownMenuRadioItemShad, DropdownMenuLabelShad, DropdownMenuSeparatorShad, DropdownMenuShortcut, DropdownMenuGroupShad, DropdownMenuPortalShad, DropdownMenuSubShad, DropdownMenuSubContentShad, DropdownMenuSubTriggerShad, DropdownMenuRadioGroupShad };\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n$RefreshReg$(_c, \"DropdownMenuSubTriggerShad$React.forwardRef\");\n$RefreshReg$(_c2, \"DropdownMenuSubTriggerShad\");\n$RefreshReg$(_c3, \"DropdownMenuSubContentShad$React.forwardRef\");\n$RefreshReg$(_c4, \"DropdownMenuSubContentShad\");\n$RefreshReg$(_c5, \"DropdownMenuContentShad$React.forwardRef\");\n$RefreshReg$(_c6, \"DropdownMenuContentShad\");\n$RefreshReg$(_c7, \"DropdownMenuItemShad$React.forwardRef\");\n$RefreshReg$(_c8, \"DropdownMenuItemShad\");\n$RefreshReg$(_c9, \"DropdownMenuCheckboxItemShad$React.forwardRef\");\n$RefreshReg$(_c10, \"DropdownMenuCheckboxItemShad\");\n$RefreshReg$(_c11, \"DropdownMenuRadioItemShad$React.forwardRef\");\n$RefreshReg$(_c12, \"DropdownMenuRadioItemShad\");\n$RefreshReg$(_c13, \"DropdownMenuLabelShad$React.forwardRef\");\n$RefreshReg$(_c14, \"DropdownMenuLabelShad\");\n$RefreshReg$(_c15, \"DropdownMenuSeparatorShad$React.forwardRef\");\n$RefreshReg$(_c16, \"DropdownMenuSeparatorShad\");\n$RefreshReg$(_c17, \"DropdownMenuShortcut\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "export {\n  createMenuScope,\n  //\n  Menu,\n  MenuAnchor,\n  MenuPortal,\n  MenuContent,\n  MenuGroup,\n  MenuLabel,\n  MenuItem,\n  MenuCheckboxItem,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuItemIndicator,\n  MenuSeparator,\n  MenuArrow,\n  MenuSub,\n  MenuSubTrigger,\n  MenuSubContent,\n  //\n  Root,\n  Anchor,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n} from './Menu';\nexport type {\n  MenuProps,\n  MenuAnchorProps,\n  MenuPortalProps,\n  MenuContentProps,\n  MenuGroupProps,\n  MenuLabelProps,\n  MenuItemProps,\n  MenuCheckboxItemProps,\n  MenuRadioGroupProps,\n  MenuRadioItemProps,\n  MenuItemIndicatorProps,\n  MenuSeparatorProps,\n  MenuArrowProps,\n  MenuSubProps,\n  MenuSubTriggerProps,\n  MenuSubContentProps,\n} from './Menu';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs, composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Slot } from '@radix-ui/react-slot';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst SELECTION_KEYS = ['Enter', ' '];\nconst FIRST_KEYS = ['ArrowDown', 'PageUp', 'Home'];\nconst LAST_KEYS = ['ArrowUp', 'PageDown', 'End'];\nconst FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS];\nconst SUB_OPEN_KEYS: Record<Direction, string[]> = {\n  ltr: [...SELECTION_KEYS, 'ArrowRight'],\n  rtl: [...SELECTION_KEYS, 'ArrowLeft'],\n};\nconst SUB_CLOSE_KEYS: Record<Direction, string[]> = {\n  ltr: ['ArrowLeft'],\n  rtl: ['ArrowRight'],\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Menu\n * -----------------------------------------------------------------------------------------------*/\n\nconst MENU_NAME = 'Menu';\n\ntype ItemData = { disabled: boolean; textValue: string };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  MenuItemElement,\n  ItemData\n>(MENU_NAME);\n\ntype ScopedProps<P> = P & { __scopeMenu?: Scope };\nconst [createMenuContext, createMenuScope] = createContextScope(MENU_NAME, [\n  createCollectionScope,\n  createPopperScope,\n  createRovingFocusGroupScope,\n]);\nconst usePopperScope = createPopperScope();\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype MenuContextValue = {\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  content: MenuContentElement | null;\n  onContentChange(content: MenuContentElement | null): void;\n};\n\nconst [MenuProvider, useMenuContext] = createMenuContext<MenuContextValue>(MENU_NAME);\n\ntype MenuRootContextValue = {\n  onClose(): void;\n  isUsingKeyboardRef: React.RefObject<boolean>;\n  dir: Direction;\n  modal: boolean;\n};\n\nconst [MenuRootProvider, useMenuRootContext] = createMenuContext<MenuRootContextValue>(MENU_NAME);\n\ninterface MenuProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  modal?: boolean;\n}\n\nconst Menu: React.FC<MenuProps> = (props: ScopedProps<MenuProps>) => {\n  const { __scopeMenu, open = false, children, dir, onOpenChange, modal = true } = props;\n  const popperScope = usePopperScope(__scopeMenu);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const isUsingKeyboardRef = React.useRef(false);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n  const direction = useDirection(dir);\n\n  React.useEffect(() => {\n    // Capture phase ensures we set the boolean before any side effects execute\n    // in response to the key or pointer event as they might depend on this value.\n    const handleKeyDown = () => {\n      isUsingKeyboardRef.current = true;\n      document.addEventListener('pointerdown', handlePointer, { capture: true, once: true });\n      document.addEventListener('pointermove', handlePointer, { capture: true, once: true });\n    };\n    const handlePointer = () => (isUsingKeyboardRef.current = false);\n    document.addEventListener('keydown', handleKeyDown, { capture: true });\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, { capture: true });\n      document.removeEventListener('pointerdown', handlePointer, { capture: true });\n      document.removeEventListener('pointermove', handlePointer, { capture: true });\n    };\n  }, []);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n      >\n        <MenuRootProvider\n          scope={__scopeMenu}\n          onClose={React.useCallback(() => handleOpenChange(false), [handleOpenChange])}\n          isUsingKeyboardRef={isUsingKeyboardRef}\n          dir={direction}\n          modal={modal}\n        >\n          {children}\n        </MenuRootProvider>\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenu.displayName = MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'MenuAnchor';\n\ntype MenuAnchorElement = React.ElementRef<typeof PopperPrimitive.Anchor>;\ntype PopperAnchorProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Anchor>;\ninterface MenuAnchorProps extends PopperAnchorProps {}\n\nconst MenuAnchor = React.forwardRef<MenuAnchorElement, MenuAnchorProps>(\n  (props: ScopedProps<MenuAnchorProps>, forwardedRef) => {\n    const { __scopeMenu, ...anchorProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Anchor {...popperScope} {...anchorProps} ref={forwardedRef} />;\n  }\n);\n\nMenuAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'MenuPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createMenuContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface MenuPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuPortal: React.FC<MenuPortalProps> = (props: ScopedProps<MenuPortalProps>) => {\n  const { __scopeMenu, forceMount, children, container } = props;\n  const context = useMenuContext(PORTAL_NAME, __scopeMenu);\n  return (\n    <PortalProvider scope={__scopeMenu} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'MenuContent';\n\ntype MenuContentContextValue = {\n  onItemEnter(event: React.PointerEvent): void;\n  onItemLeave(event: React.PointerEvent): void;\n  onTriggerLeave(event: React.PointerEvent): void;\n  searchRef: React.RefObject<string>;\n  pointerGraceTimerRef: React.MutableRefObject<number>;\n  onPointerGraceIntentChange(intent: GraceIntent | null): void;\n};\nconst [MenuContentProvider, useMenuContentContext] =\n  createMenuContext<MenuContentContextValue>(CONTENT_NAME);\n\ntype MenuContentElement = MenuRootContentTypeElement;\n/**\n * We purposefully don't union MenuRootContent and MenuSubContent props here because\n * they have conflicting prop types. We agreed that we would allow MenuSubContent to\n * accept props that it would just ignore.\n */\ninterface MenuContentProps extends MenuRootContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuContent = React.forwardRef<MenuContentElement, MenuContentProps>(\n  (props: ScopedProps<MenuContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);\n\n    return (\n      <Collection.Provider scope={props.__scopeMenu}>\n        <Presence present={forceMount || context.open}>\n          <Collection.Slot scope={props.__scopeMenu}>\n            {rootContext.modal ? (\n              <MenuRootContentModal {...contentProps} ref={forwardedRef} />\n            ) : (\n              <MenuRootContentNonModal {...contentProps} ref={forwardedRef} />\n            )}\n          </Collection.Slot>\n        </Presence>\n      </Collection.Provider>\n    );\n  }\n);\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuRootContentTypeElement = MenuContentImplElement;\ninterface MenuRootContentTypeProps\n  extends Omit<MenuContentImplProps, keyof MenuContentImplPrivateProps> {}\n\nconst MenuRootContentModal = React.forwardRef<MenuRootContentTypeElement, MenuRootContentTypeProps>(\n  (props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuRootContentTypeElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    // Hide everything from ARIA except the `MenuContent`\n    React.useEffect(() => {\n      const content = ref.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <MenuContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure we're not trapping once it's been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        // make sure to only disable pointer events when open\n        // this avoids blocking interactions while animating out\n        disableOutsidePointerEvents={context.open}\n        disableOutsideScroll\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(\n          props.onFocusOutside,\n          (event) => event.preventDefault(),\n          { checkForDefaultPrevented: false }\n        )}\n        onDismiss={() => context.onOpenChange(false)}\n      />\n    );\n  }\n);\n\nconst MenuRootContentNonModal = React.forwardRef<\n  MenuRootContentTypeElement,\n  MenuRootContentTypeProps\n>((props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n  const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n  return (\n    <MenuContentImpl\n      {...props}\n      ref={forwardedRef}\n      trapFocus={false}\n      disableOutsidePointerEvents={false}\n      disableOutsideScroll={false}\n      onDismiss={() => context.onOpenChange(false)}\n    />\n  );\n});\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype FocusScopeProps = Radix.ComponentPropsWithoutRef<typeof FocusScope>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype RovingFocusGroupProps = Radix.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PopperContentProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ntype MenuContentImplPrivateProps = {\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n  onDismiss?: DismissableLayerProps['onDismiss'];\n  disableOutsidePointerEvents?: DismissableLayerProps['disableOutsidePointerEvents'];\n\n  /**\n   * Whether scrolling outside the `MenuContent` should be prevented\n   * (default: `false`)\n   */\n  disableOutsideScroll?: boolean;\n\n  /**\n   * Whether focus should be trapped within the `MenuContent`\n   * (default: false)\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n};\ninterface MenuContentImplProps\n  extends MenuContentImplPrivateProps,\n    Omit<PopperContentProps, 'dir' | 'onPlaced'> {\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: RovingFocusGroupProps['loop'];\n\n  onEntryFocus?: RovingFocusGroupProps['onEntryFocus'];\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n  onFocusOutside?: DismissableLayerProps['onFocusOutside'];\n  onInteractOutside?: DismissableLayerProps['onInteractOutside'];\n}\n\nconst MenuContentImpl = React.forwardRef<MenuContentImplElement, MenuContentImplProps>(\n  (props: ScopedProps<MenuContentImplProps>, forwardedRef) => {\n    const {\n      __scopeMenu,\n      loop = false,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEntryFocus,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      disableOutsideScroll,\n      ...contentProps\n    } = props;\n    const context = useMenuContext(CONTENT_NAME, __scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, __scopeMenu);\n    const popperScope = usePopperScope(__scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const getItems = useCollection(__scopeMenu);\n    const [currentItemId, setCurrentItemId] = React.useState<string | null>(null);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef, context.onContentChange);\n    const timerRef = React.useRef(0);\n    const searchRef = React.useRef('');\n    const pointerGraceTimerRef = React.useRef(0);\n    const pointerGraceIntentRef = React.useRef<GraceIntent | null>(null);\n    const pointerDirRef = React.useRef<Side>('right');\n    const lastPointerXRef = React.useRef(0);\n\n    const ScrollLockWrapper = disableOutsideScroll ? RemoveScroll : React.Fragment;\n    const scrollLockWrapperProps = disableOutsideScroll\n      ? { as: Slot, allowPinchZoom: true }\n      : undefined;\n\n    const handleTypeaheadSearch = (key: string) => {\n      const search = searchRef.current + key;\n      const items = getItems().filter((item) => !item.disabled);\n      const currentItem = document.activeElement;\n      const currentMatch = items.find((item) => item.ref.current === currentItem)?.textValue;\n      const values = items.map((item) => item.textValue);\n      const nextMatch = getNextMatch(values, search, currentMatch);\n      const newItem = items.find((item) => item.textValue === nextMatch)?.ref.current;\n\n      // Reset `searchRef` 1 second after it was last updated\n      (function updateSearch(value: string) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n      })(search);\n\n      if (newItem) {\n        /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */\n        setTimeout(() => (newItem as HTMLElement).focus());\n      }\n    };\n\n    React.useEffect(() => {\n      return () => window.clearTimeout(timerRef.current);\n    }, []);\n\n    // Make sure the whole tree has focus guards as our `MenuContent` may be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    const isPointerMovingToSubmenu = React.useCallback((event: React.PointerEvent) => {\n      const isMovingTowards = pointerDirRef.current === pointerGraceIntentRef.current?.side;\n      return isMovingTowards && isPointerInGraceArea(event, pointerGraceIntentRef.current?.area);\n    }, []);\n\n    return (\n      <MenuContentProvider\n        scope={__scopeMenu}\n        searchRef={searchRef}\n        onItemEnter={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) event.preventDefault();\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        onItemLeave={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) return;\n            contentRef.current?.focus();\n            setCurrentItemId(null);\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        onTriggerLeave={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) event.preventDefault();\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        pointerGraceTimerRef={pointerGraceTimerRef}\n        onPointerGraceIntentChange={React.useCallback((intent) => {\n          pointerGraceIntentRef.current = intent;\n        }, [])}\n      >\n        <ScrollLockWrapper {...scrollLockWrapperProps}>\n          <FocusScope\n            asChild\n            trapped={trapFocus}\n            onMountAutoFocus={composeEventHandlers(onOpenAutoFocus, (event) => {\n              // when opening, explicitly focus the content area only and leave\n              // `onEntryFocus` in  control of focusing first item\n              event.preventDefault();\n              contentRef.current?.focus();\n            })}\n            onUnmountAutoFocus={onCloseAutoFocus}\n          >\n            <DismissableLayer\n              asChild\n              disableOutsidePointerEvents={disableOutsidePointerEvents}\n              onEscapeKeyDown={onEscapeKeyDown}\n              onPointerDownOutside={onPointerDownOutside}\n              onFocusOutside={onFocusOutside}\n              onInteractOutside={onInteractOutside}\n              onDismiss={onDismiss}\n            >\n              <RovingFocusGroup.Root\n                asChild\n                {...rovingFocusGroupScope}\n                dir={rootContext.dir}\n                orientation=\"vertical\"\n                loop={loop}\n                currentTabStopId={currentItemId}\n                onCurrentTabStopIdChange={setCurrentItemId}\n                onEntryFocus={composeEventHandlers(onEntryFocus, (event) => {\n                  // only focus first item when using keyboard\n                  if (!rootContext.isUsingKeyboardRef.current) event.preventDefault();\n                })}\n              >\n                <PopperPrimitive.Content\n                  role=\"menu\"\n                  aria-orientation=\"vertical\"\n                  data-state={getOpenState(context.open)}\n                  data-radix-menu-content=\"\"\n                  dir={rootContext.dir}\n                  {...popperScope}\n                  {...contentProps}\n                  ref={composedRefs}\n                  style={{ outline: 'none', ...contentProps.style }}\n                  onKeyDown={composeEventHandlers(contentProps.onKeyDown, (event) => {\n                    // submenu key events bubble through portals. We only care about keys in this menu.\n                    const target = event.target as HTMLElement;\n                    const isKeyDownInside =\n                      target.closest('[data-radix-menu-content]') === event.currentTarget;\n                    const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n                    const isCharacterKey = event.key.length === 1;\n                    if (isKeyDownInside) {\n                      // menus should not be navigated using tab key so we prevent it\n                      if (event.key === 'Tab') event.preventDefault();\n                      if (!isModifierKey && isCharacterKey) handleTypeaheadSearch(event.key);\n                    }\n                    // focus first/last item based on key pressed\n                    const content = contentRef.current;\n                    if (event.target !== content) return;\n                    if (!FIRST_LAST_KEYS.includes(event.key)) return;\n                    event.preventDefault();\n                    const items = getItems().filter((item) => !item.disabled);\n                    const candidateNodes = items.map((item) => item.ref.current!);\n                    if (LAST_KEYS.includes(event.key)) candidateNodes.reverse();\n                    focusFirst(candidateNodes);\n                  })}\n                  onBlur={composeEventHandlers(props.onBlur, (event) => {\n                    // clear search buffer when leaving the menu\n                    if (!event.currentTarget.contains(event.target)) {\n                      window.clearTimeout(timerRef.current);\n                      searchRef.current = '';\n                    }\n                  })}\n                  onPointerMove={composeEventHandlers(\n                    props.onPointerMove,\n                    whenMouse((event) => {\n                      const target = event.target as HTMLElement;\n                      const pointerXHasChanged = lastPointerXRef.current !== event.clientX;\n\n                      // We don't use `event.movementX` for this check because Safari will\n                      // always return `0` on a pointer event.\n                      if (event.currentTarget.contains(target) && pointerXHasChanged) {\n                        const newDir = event.clientX > lastPointerXRef.current ? 'right' : 'left';\n                        pointerDirRef.current = newDir;\n                        lastPointerXRef.current = event.clientX;\n                      }\n                    })\n                  )}\n                />\n              </RovingFocusGroup.Root>\n            </DismissableLayer>\n          </FocusScope>\n        </ScrollLockWrapper>\n      </MenuContentProvider>\n    );\n  }\n);\n\nMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'MenuGroup';\n\ntype MenuGroupElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface MenuGroupProps extends PrimitiveDivProps {}\n\nconst MenuGroup = React.forwardRef<MenuGroupElement, MenuGroupProps>(\n  (props: ScopedProps<MenuGroupProps>, forwardedRef) => {\n    const { __scopeMenu, ...groupProps } = props;\n    return <Primitive.div role=\"group\" {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'MenuLabel';\n\ntype MenuLabelElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuLabelProps extends PrimitiveDivProps {}\n\nconst MenuLabel = React.forwardRef<MenuLabelElement, MenuLabelProps>(\n  (props: ScopedProps<MenuLabelProps>, forwardedRef) => {\n    const { __scopeMenu, ...labelProps } = props;\n    return <Primitive.div {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'MenuItem';\nconst ITEM_SELECT = 'menu.itemSelect';\n\ntype MenuItemElement = MenuItemImplElement;\ninterface MenuItemProps extends Omit<MenuItemImplProps, 'onSelect'> {\n  onSelect?: (event: Event) => void;\n}\n\nconst MenuItem = React.forwardRef<MenuItemElement, MenuItemProps>(\n  (props: ScopedProps<MenuItemProps>, forwardedRef) => {\n    const { disabled = false, onSelect, ...itemProps } = props;\n    const ref = React.useRef<HTMLDivElement>(null);\n    const rootContext = useMenuRootContext(ITEM_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(ITEM_NAME, props.__scopeMenu);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const isPointerDownRef = React.useRef(false);\n\n    const handleSelect = () => {\n      const menuItem = ref.current;\n      if (!disabled && menuItem) {\n        const itemSelectEvent = new CustomEvent(ITEM_SELECT, { bubbles: true, cancelable: true });\n        menuItem.addEventListener(ITEM_SELECT, (event) => onSelect?.(event), { once: true });\n        dispatchDiscreteCustomEvent(menuItem, itemSelectEvent);\n        if (itemSelectEvent.defaultPrevented) {\n          isPointerDownRef.current = false;\n        } else {\n          rootContext.onClose();\n        }\n      }\n    };\n\n    return (\n      <MenuItemImpl\n        {...itemProps}\n        ref={composedRefs}\n        disabled={disabled}\n        onClick={composeEventHandlers(props.onClick, handleSelect)}\n        onPointerDown={(event) => {\n          props.onPointerDown?.(event);\n          isPointerDownRef.current = true;\n        }}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          // Pointer down can move to a different menu item which should activate it on pointer up.\n          // We dispatch a click for selection to allow composition with click based triggers and to\n          // prevent Firefox from getting stuck in text selection mode when the menu closes.\n          if (!isPointerDownRef.current) event.currentTarget?.click();\n        })}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          const isTypingAhead = contentContext.searchRef.current !== '';\n          if (disabled || (isTypingAhead && event.key === ' ')) return;\n          if (SELECTION_KEYS.includes(event.key)) {\n            event.currentTarget.click();\n            /**\n             * We prevent default browser behaviour for selection keys as they should trigger\n             * a selection only:\n             * - prevents space from scrolling the page.\n             * - if keydown causes focus to move, prevents keydown from firing on the new target.\n             */\n            event.preventDefault();\n          }\n        })}\n      />\n    );\n  }\n);\n\nMenuItem.displayName = ITEM_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuItemImplElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuItemImplProps extends PrimitiveDivProps {\n  disabled?: boolean;\n  textValue?: string;\n}\n\nconst MenuItemImpl = React.forwardRef<MenuItemImplElement, MenuItemImplProps>(\n  (props: ScopedProps<MenuItemImplProps>, forwardedRef) => {\n    const { __scopeMenu, disabled = false, textValue, ...itemProps } = props;\n    const contentContext = useMenuContentContext(ITEM_NAME, __scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const ref = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const [isFocused, setIsFocused] = React.useState(false);\n\n    // get the item's `.textContent` as default strategy for typeahead `textValue`\n    const [textContent, setTextContent] = React.useState('');\n    React.useEffect(() => {\n      const menuItem = ref.current;\n      if (menuItem) {\n        setTextContent((menuItem.textContent ?? '').trim());\n      }\n    }, [itemProps.children]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeMenu}\n        disabled={disabled}\n        textValue={textValue ?? textContent}\n      >\n        <RovingFocusGroup.Item asChild {...rovingFocusGroupScope} focusable={!disabled}>\n          <Primitive.div\n            role=\"menuitem\"\n            data-highlighted={isFocused ? '' : undefined}\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            {...itemProps}\n            ref={composedRefs}\n            /**\n             * We focus items on `pointerMove` to achieve the following:\n             *\n             * - Mouse over an item (it focuses)\n             * - Leave mouse where it is and use keyboard to focus a different item\n             * - Wiggle mouse without it leaving previously focused item\n             * - Previously focused item should re-focus\n             *\n             * If we used `mouseOver`/`mouseEnter` it would not re-focus when the mouse\n             * wiggles. This is to match native menu implementation.\n             */\n            onPointerMove={composeEventHandlers(\n              props.onPointerMove,\n              whenMouse((event) => {\n                if (disabled) {\n                  contentContext.onItemLeave(event);\n                } else {\n                  contentContext.onItemEnter(event);\n                  if (!event.defaultPrevented) {\n                    const item = event.currentTarget;\n                    item.focus();\n                  }\n                }\n              })\n            )}\n            onPointerLeave={composeEventHandlers(\n              props.onPointerLeave,\n              whenMouse((event) => contentContext.onItemLeave(event))\n            )}\n            onFocus={composeEventHandlers(props.onFocus, () => setIsFocused(true))}\n            onBlur={composeEventHandlers(props.onBlur, () => setIsFocused(false))}\n          />\n        </RovingFocusGroup.Item>\n      </Collection.ItemSlot>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * MenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'MenuCheckboxItem';\n\ntype MenuCheckboxItemElement = MenuItemElement;\n\ntype CheckedState = boolean | 'indeterminate';\n\ninterface MenuCheckboxItemProps extends MenuItemProps {\n  checked?: CheckedState;\n  // `onCheckedChange` can never be called with `\"indeterminate\"` from the inside\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nconst MenuCheckboxItem = React.forwardRef<MenuCheckboxItemElement, MenuCheckboxItemProps>(\n  (props: ScopedProps<MenuCheckboxItemProps>, forwardedRef) => {\n    const { checked = false, onCheckedChange, ...checkboxItemProps } = props;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemcheckbox\"\n          aria-checked={isIndeterminate(checked) ? 'mixed' : checked}\n          {...checkboxItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            checkboxItemProps.onSelect,\n            () => onCheckedChange?.(isIndeterminate(checked) ? true : !checked),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'MenuRadioGroup';\n\nconst [RadioGroupProvider, useRadioGroupContext] = createMenuContext<MenuRadioGroupProps>(\n  RADIO_GROUP_NAME,\n  { value: undefined, onValueChange: () => {} }\n);\n\ntype MenuRadioGroupElement = React.ElementRef<typeof MenuGroup>;\ninterface MenuRadioGroupProps extends MenuGroupProps {\n  value?: string;\n  onValueChange?: (value: string) => void;\n}\n\nconst MenuRadioGroup = React.forwardRef<MenuRadioGroupElement, MenuRadioGroupProps>(\n  (props: ScopedProps<MenuRadioGroupProps>, forwardedRef) => {\n    const { value, onValueChange, ...groupProps } = props;\n    const handleValueChange = useCallbackRef(onValueChange);\n    return (\n      <RadioGroupProvider scope={props.__scopeMenu} value={value} onValueChange={handleValueChange}>\n        <MenuGroup {...groupProps} ref={forwardedRef} />\n      </RadioGroupProvider>\n    );\n  }\n);\n\nMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'MenuRadioItem';\n\ntype MenuRadioItemElement = React.ElementRef<typeof MenuItem>;\ninterface MenuRadioItemProps extends MenuItemProps {\n  value: string;\n}\n\nconst MenuRadioItem = React.forwardRef<MenuRadioItemElement, MenuRadioItemProps>(\n  (props: ScopedProps<MenuRadioItemProps>, forwardedRef) => {\n    const { value, ...radioItemProps } = props;\n    const context = useRadioGroupContext(RADIO_ITEM_NAME, props.__scopeMenu);\n    const checked = value === context.value;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemradio\"\n          aria-checked={checked}\n          {...radioItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            radioItemProps.onSelect,\n            () => context.onValueChange?.(value),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'MenuItemIndicator';\n\ntype CheckboxContextValue = { checked: CheckedState };\n\nconst [ItemIndicatorProvider, useItemIndicatorContext] = createMenuContext<CheckboxContextValue>(\n  ITEM_INDICATOR_NAME,\n  { checked: false }\n);\n\ntype MenuItemIndicatorElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface MenuItemIndicatorProps extends PrimitiveSpanProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuItemIndicator = React.forwardRef<MenuItemIndicatorElement, MenuItemIndicatorProps>(\n  (props: ScopedProps<MenuItemIndicatorProps>, forwardedRef) => {\n    const { __scopeMenu, forceMount, ...itemIndicatorProps } = props;\n    const indicatorContext = useItemIndicatorContext(ITEM_INDICATOR_NAME, __scopeMenu);\n    return (\n      <Presence\n        present={\n          forceMount ||\n          isIndeterminate(indicatorContext.checked) ||\n          indicatorContext.checked === true\n        }\n      >\n        <Primitive.span\n          {...itemIndicatorProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(indicatorContext.checked)}\n        />\n      </Presence>\n    );\n  }\n);\n\nMenuItemIndicator.displayName = ITEM_INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'MenuSeparator';\n\ntype MenuSeparatorElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuSeparatorProps extends PrimitiveDivProps {}\n\nconst MenuSeparator = React.forwardRef<MenuSeparatorElement, MenuSeparatorProps>(\n  (props: ScopedProps<MenuSeparatorProps>, forwardedRef) => {\n    const { __scopeMenu, ...separatorProps } = props;\n    return (\n      <Primitive.div\n        role=\"separator\"\n        aria-orientation=\"horizontal\"\n        {...separatorProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'MenuArrow';\n\ntype MenuArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface MenuArrowProps extends PopperArrowProps {}\n\nconst MenuArrow = React.forwardRef<MenuArrowElement, MenuArrowProps>(\n  (props: ScopedProps<MenuArrowProps>, forwardedRef) => {\n    const { __scopeMenu, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'MenuSub';\n\ntype MenuSubContextValue = {\n  contentId: string;\n  triggerId: string;\n  trigger: MenuSubTriggerElement | null;\n  onTriggerChange(trigger: MenuSubTriggerElement | null): void;\n};\n\nconst [MenuSubProvider, useMenuSubContext] = createMenuContext<MenuSubContextValue>(SUB_NAME);\n\ninterface MenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst MenuSub: React.FC<MenuSubProps> = (props: ScopedProps<MenuSubProps>) => {\n  const { __scopeMenu, children, open = false, onOpenChange } = props;\n  const parentMenuContext = useMenuContext(SUB_NAME, __scopeMenu);\n  const popperScope = usePopperScope(__scopeMenu);\n  const [trigger, setTrigger] = React.useState<MenuSubTriggerElement | null>(null);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n\n  // Prevent the parent menu from reopening with open submenus.\n  React.useEffect(() => {\n    if (parentMenuContext.open === false) handleOpenChange(false);\n    return () => handleOpenChange(false);\n  }, [parentMenuContext.open, handleOpenChange]);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n      >\n        <MenuSubProvider\n          scope={__scopeMenu}\n          contentId={useId()}\n          triggerId={useId()}\n          trigger={trigger}\n          onTriggerChange={setTrigger}\n        >\n          {children}\n        </MenuSubProvider>\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenuSub.displayName = SUB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'MenuSubTrigger';\n\ntype MenuSubTriggerElement = MenuItemImplElement;\ninterface MenuSubTriggerProps extends MenuItemImplProps {}\n\nconst MenuSubTrigger = React.forwardRef<MenuSubTriggerElement, MenuSubTriggerProps>(\n  (props: ScopedProps<MenuSubTriggerProps>, forwardedRef) => {\n    const context = useMenuContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const subContext = useMenuSubContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const openTimerRef = React.useRef<number | null>(null);\n    const { pointerGraceTimerRef, onPointerGraceIntentChange } = contentContext;\n    const scope = { __scopeMenu: props.__scopeMenu };\n\n    const clearOpenTimer = React.useCallback(() => {\n      if (openTimerRef.current) window.clearTimeout(openTimerRef.current);\n      openTimerRef.current = null;\n    }, []);\n\n    React.useEffect(() => clearOpenTimer, [clearOpenTimer]);\n\n    React.useEffect(() => {\n      const pointerGraceTimer = pointerGraceTimerRef.current;\n      return () => {\n        window.clearTimeout(pointerGraceTimer);\n        onPointerGraceIntentChange(null);\n      };\n    }, [pointerGraceTimerRef, onPointerGraceIntentChange]);\n\n    return (\n      <MenuAnchor asChild {...scope}>\n        <MenuItemImpl\n          id={subContext.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open}\n          aria-controls={subContext.contentId}\n          data-state={getOpenState(context.open)}\n          {...props}\n          ref={composeRefs(forwardedRef, subContext.onTriggerChange)}\n          // This is redundant for mouse users but we cannot determine pointer type from\n          // click event and we cannot use pointerup event (see git history for reasons why)\n          onClick={(event) => {\n            props.onClick?.(event);\n            if (props.disabled || event.defaultPrevented) return;\n            /**\n             * We manually focus because iOS Safari doesn't always focus on click (e.g. buttons)\n             * and we rely heavily on `onFocusOutside` for submenus to close when switching\n             * between separate submenus.\n             */\n            event.currentTarget.focus();\n            if (!context.open) context.onOpenChange(true);\n          }}\n          onPointerMove={composeEventHandlers(\n            props.onPointerMove,\n            whenMouse((event) => {\n              contentContext.onItemEnter(event);\n              if (event.defaultPrevented) return;\n              if (!props.disabled && !context.open && !openTimerRef.current) {\n                contentContext.onPointerGraceIntentChange(null);\n                openTimerRef.current = window.setTimeout(() => {\n                  context.onOpenChange(true);\n                  clearOpenTimer();\n                }, 100);\n              }\n            })\n          )}\n          onPointerLeave={composeEventHandlers(\n            props.onPointerLeave,\n            whenMouse((event) => {\n              clearOpenTimer();\n\n              const contentRect = context.content?.getBoundingClientRect();\n              if (contentRect) {\n                // TODO: make sure to update this when we change positioning logic\n                const side = context.content?.dataset.side as Side;\n                const rightSide = side === 'right';\n                const bleed = rightSide ? -5 : +5;\n                const contentNearEdge = contentRect[rightSide ? 'left' : 'right'];\n                const contentFarEdge = contentRect[rightSide ? 'right' : 'left'];\n\n                contentContext.onPointerGraceIntentChange({\n                  area: [\n                    // Apply a bleed on clientX to ensure that our exit point is\n                    // consistently within polygon bounds\n                    { x: event.clientX + bleed, y: event.clientY },\n                    { x: contentNearEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.bottom },\n                    { x: contentNearEdge, y: contentRect.bottom },\n                  ],\n                  side,\n                });\n\n                window.clearTimeout(pointerGraceTimerRef.current);\n                pointerGraceTimerRef.current = window.setTimeout(\n                  () => contentContext.onPointerGraceIntentChange(null),\n                  300\n                );\n              } else {\n                contentContext.onTriggerLeave(event);\n                if (event.defaultPrevented) return;\n\n                // There's 100ms where the user may leave an item before the submenu was opened.\n                contentContext.onPointerGraceIntentChange(null);\n              }\n            })\n          )}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            const isTypingAhead = contentContext.searchRef.current !== '';\n            if (props.disabled || (isTypingAhead && event.key === ' ')) return;\n            if (SUB_OPEN_KEYS[rootContext.dir].includes(event.key)) {\n              context.onOpenChange(true);\n              // The trigger may hold focus if opened via pointer interaction\n              // so we ensure content is given focus again when switching to keyboard.\n              context.content?.focus();\n              // prevent window from scrolling\n              event.preventDefault();\n            }\n          })}\n        />\n      </MenuAnchor>\n    );\n  }\n);\n\nMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'MenuSubContent';\n\ntype MenuSubContentElement = MenuContentImplElement;\ninterface MenuSubContentProps\n  extends Omit<\n    MenuContentImplProps,\n    keyof MenuContentImplPrivateProps | 'onCloseAutoFocus' | 'onEntryFocus' | 'side' | 'align'\n  > {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuSubContent = React.forwardRef<MenuSubContentElement, MenuSubContentProps>(\n  (props: ScopedProps<MenuSubContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);\n    const { forceMount = portalContext.forceMount, ...subContentProps } = props;\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);\n    const subContext = useMenuSubContext(SUB_CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuSubContentElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    return (\n      <Collection.Provider scope={props.__scopeMenu}>\n        <Presence present={forceMount || context.open}>\n          <Collection.Slot scope={props.__scopeMenu}>\n            <MenuContentImpl\n              id={subContext.contentId}\n              aria-labelledby={subContext.triggerId}\n              {...subContentProps}\n              ref={composedRefs}\n              align=\"start\"\n              side={rootContext.dir === 'rtl' ? 'left' : 'right'}\n              disableOutsidePointerEvents={false}\n              disableOutsideScroll={false}\n              trapFocus={false}\n              onOpenAutoFocus={(event) => {\n                // when opening a submenu, focus content for keyboard users only\n                if (rootContext.isUsingKeyboardRef.current) ref.current?.focus();\n                event.preventDefault();\n              }}\n              // The menu might close because of focusing another menu item in the parent menu. We\n              // don't want it to refocus the trigger in that case so we handle trigger focus ourselves.\n              onCloseAutoFocus={(event) => event.preventDefault()}\n              onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) => {\n                // We prevent closing when the trigger is focused to avoid triggering a re-open animation\n                // on pointer interaction.\n                if (event.target !== subContext.trigger) context.onOpenChange(false);\n              })}\n              onEscapeKeyDown={composeEventHandlers(props.onEscapeKeyDown, (event) => {\n                rootContext.onClose();\n                // ensure pressing escape in submenu doesn't escape full screen mode\n                event.preventDefault();\n              })}\n              onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n                // Submenu key events bubble through portals. We only care about keys in this menu.\n                const isKeyDownInside = event.currentTarget.contains(event.target as HTMLElement);\n                const isCloseKey = SUB_CLOSE_KEYS[rootContext.dir].includes(event.key);\n                if (isKeyDownInside && isCloseKey) {\n                  context.onOpenChange(false);\n                  // We focus manually because we prevented it in `onCloseAutoFocus`\n                  subContext.trigger?.focus();\n                  // prevent window from scrolling\n                  event.preventDefault();\n                }\n              })}\n            />\n          </Collection.Slot>\n        </Presence>\n      </Collection.Provider>\n    );\n  }\n);\n\nMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getOpenState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nfunction isIndeterminate(checked?: CheckedState): checked is 'indeterminate' {\n  return checked === 'indeterminate';\n}\n\nfunction getCheckedState(checked: CheckedState) {\n  return isIndeterminate(checked) ? 'indeterminate' : checked ? 'checked' : 'unchecked';\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus();\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in all the values,\n * the search and the current match, and returns the next match (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through options starting with that character)\n *\n * We also reorder the values by wrapping the array around the current match.\n * This is so we always look forward from the current match, and picking the first\n * match will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current match from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current match still matches.\n */\nfunction getNextMatch(values: string[], search: string, currentMatch?: string) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0] : search;\n  const currentMatchIndex = currentMatch ? values.indexOf(currentMatch) : -1;\n  let wrappedValues = wrapArray(values, Math.max(currentMatchIndex, 0));\n  const excludeCurrentMatch = normalizedSearch.length === 1;\n  if (excludeCurrentMatch) wrappedValues = wrappedValues.filter((v) => v !== currentMatch);\n  const nextMatch = wrappedValues.find((value) =>\n    value.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextMatch !== currentMatch ? nextMatch : undefined;\n}\n\ntype Point = { x: number; y: number };\ntype Polygon = Point[];\ntype Side = 'left' | 'right';\ntype GraceIntent = { area: Polygon; side: Side };\n\n// Determine if a point is inside of a polygon.\n// Based on https://github.com/substack/point-in-polygon\nfunction isPointInPolygon(point: Point, polygon: Polygon) {\n  const { x, y } = point;\n  let inside = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n\n    // prettier-ignore\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n\n  return inside;\n}\n\nfunction isPointerInGraceArea(event: React.PointerEvent, area?: Polygon) {\n  if (!area) return false;\n  const cursorPos = { x: event.clientX, y: event.clientY };\n  return isPointInPolygon(cursorPos, area);\n}\n\nfunction whenMouse<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType === 'mouse' ? handler(event) : undefined);\n}\n\nconst Root = Menu;\nconst Anchor = MenuAnchor;\nconst Portal = MenuPortal;\nconst Content = MenuContent;\nconst Group = MenuGroup;\nconst Label = MenuLabel;\nconst Item = MenuItem;\nconst CheckboxItem = MenuCheckboxItem;\nconst RadioGroup = MenuRadioGroup;\nconst RadioItem = MenuRadioItem;\nconst ItemIndicator = MenuItemIndicator;\nconst Separator = MenuSeparator;\nconst Arrow = MenuArrow;\nconst Sub = MenuSub;\nconst SubTrigger = MenuSubTrigger;\nconst SubContent = MenuSubContent;\n\nexport {\n  createMenuScope,\n  //\n  Menu,\n  MenuAnchor,\n  MenuPortal,\n  MenuContent,\n  MenuGroup,\n  MenuLabel,\n  MenuItem,\n  MenuCheckboxItem,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuItemIndicator,\n  MenuSeparator,\n  MenuArrow,\n  MenuSub,\n  MenuSubTrigger,\n  MenuSubContent,\n  //\n  Root,\n  Anchor,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  MenuProps,\n  MenuAnchorProps,\n  MenuPortalProps,\n  MenuContentProps,\n  MenuGroupProps,\n  MenuLabelProps,\n  MenuItemProps,\n  MenuCheckboxItemProps,\n  MenuRadioGroupProps,\n  MenuRadioItemProps,\n  MenuItemIndicatorProps,\n  MenuSeparatorProps,\n  MenuArrowProps,\n  MenuSubProps,\n  MenuSubTriggerProps,\n  MenuSubContentProps,\n};\n", "export {\n  createDropdownMenuScope,\n  //\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuPortal,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuItemIndicator,\n  DropdownMenuSeparator,\n  DropdownMenuArrow,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n} from './DropdownMenu';\nexport type {\n  DropdownMenuProps,\n  DropdownMenuTriggerProps,\n  DropdownMenuPortalProps,\n  DropdownMenuContentProps,\n  DropdownMenuGroupProps,\n  DropdownMenuLabelProps,\n  DropdownMenuItemProps,\n  DropdownMenuCheckboxItemProps,\n  DropdownMenuRadioGroupProps,\n  DropdownMenuRadioItemProps,\n  DropdownMenuItemIndicatorProps,\n  DropdownMenuSeparatorProps,\n  DropdownMenuArrowProps,\n  DropdownMenuSubProps,\n  DropdownMenuSubTriggerProps,\n  DropdownMenuSubContentProps,\n} from './DropdownMenu';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as MenuPrimitive from '@radix-ui/react-menu';\nimport { createMenuScope } from '@radix-ui/react-menu';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst DROPDOWN_MENU_NAME = 'DropdownMenu';\n\ntype ScopedProps<P> = P & { __scopeDropdownMenu?: Scope };\nconst [createDropdownMenuContext, createDropdownMenuScope] = createContextScope(\n  DROPDOWN_MENU_NAME,\n  [createMenuScope]\n);\nconst useMenuScope = createMenuScope();\n\ntype DropdownMenuContextValue = {\n  triggerId: string;\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DropdownMenuProvider, useDropdownMenuContext] =\n  createDropdownMenuContext<DropdownMenuContextValue>(DROPDOWN_MENU_NAME);\n\ninterface DropdownMenuProps {\n  children?: React.ReactNode;\n  dir?: Direction;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst DropdownMenu: React.FC<DropdownMenuProps> = (props: ScopedProps<DropdownMenuProps>) => {\n  const {\n    __scopeDropdownMenu,\n    children,\n    dir,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <DropdownMenuProvider\n      scope={__scopeDropdownMenu}\n      triggerId={useId()}\n      triggerRef={triggerRef}\n      contentId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      <MenuPrimitive.Root {...menuScope} open={open} onOpenChange={setOpen} dir={dir} modal={modal}>\n        {children}\n      </MenuPrimitive.Root>\n    </DropdownMenuProvider>\n  );\n};\n\nDropdownMenu.displayName = DROPDOWN_MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DropdownMenuTrigger';\n\ntype DropdownMenuTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DropdownMenuTriggerProps extends PrimitiveButtonProps {}\n\nconst DropdownMenuTrigger = React.forwardRef<DropdownMenuTriggerElement, DropdownMenuTriggerProps>(\n  (props: ScopedProps<DropdownMenuTriggerProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, disabled = false, ...triggerProps } = props;\n    const context = useDropdownMenuContext(TRIGGER_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return (\n      <MenuPrimitive.Anchor asChild {...menuScope}>\n        <Primitive.button\n          type=\"button\"\n          id={context.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open}\n          aria-controls={context.open ? context.contentId : undefined}\n          data-state={context.open ? 'open' : 'closed'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          {...triggerProps}\n          ref={composeRefs(forwardedRef, context.triggerRef)}\n          onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onOpenToggle();\n              // prevent trigger focusing when opening\n              // this allows the content to be given focus without competition\n              if (!context.open) event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (disabled) return;\n            if (['Enter', ' '].includes(event.key)) context.onOpenToggle();\n            if (event.key === 'ArrowDown') context.onOpenChange(true);\n            // prevent keydown from scrolling window / first focused item to execute\n            // that keydown (inadvertently closing the menu)\n            if (['Enter', ' ', 'ArrowDown'].includes(event.key)) event.preventDefault();\n          })}\n        />\n      </MenuPrimitive.Anchor>\n    );\n  }\n);\n\nDropdownMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DropdownMenuPortal';\n\ntype MenuPortalProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Portal>;\ninterface DropdownMenuPortalProps extends MenuPortalProps {}\n\nconst DropdownMenuPortal: React.FC<DropdownMenuPortalProps> = (\n  props: ScopedProps<DropdownMenuPortalProps>\n) => {\n  const { __scopeDropdownMenu, ...portalProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.Portal {...menuScope} {...portalProps} />;\n};\n\nDropdownMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DropdownMenuContent';\n\ntype DropdownMenuContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuContentProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Content>;\ninterface DropdownMenuContentProps extends Omit<MenuContentProps, 'onEntryFocus'> {}\n\nconst DropdownMenuContent = React.forwardRef<DropdownMenuContentElement, DropdownMenuContentProps>(\n  (props: ScopedProps<DropdownMenuContentProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...contentProps } = props;\n    const context = useDropdownMenuContext(CONTENT_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    const hasInteractedOutsideRef = React.useRef(false);\n\n    return (\n      <MenuPrimitive.Content\n        id={context.contentId}\n        aria-labelledby={context.triggerId}\n        {...menuScope}\n        {...contentProps}\n        ref={forwardedRef}\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n          hasInteractedOutsideRef.current = false;\n          // Always prevent auto focus because we either focus manually or want user agent focus\n          event.preventDefault();\n        })}\n        onInteractOutside={composeEventHandlers(props.onInteractOutside, (event) => {\n          const originalEvent = event.detail.originalEvent as PointerEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n          if (!context.modal || isRightClick) hasInteractedOutsideRef.current = true;\n        })}\n        style={{\n          ...props.style,\n          // re-namespace exposed content custom properties\n          ...{\n            '--radix-dropdown-menu-content-transform-origin':\n              'var(--radix-popper-transform-origin)',\n            '--radix-dropdown-menu-content-available-width': 'var(--radix-popper-available-width)',\n            '--radix-dropdown-menu-content-available-height':\n              'var(--radix-popper-available-height)',\n            '--radix-dropdown-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n            '--radix-dropdown-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n          },\n        }}\n      />\n    );\n  }\n);\n\nDropdownMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'DropdownMenuGroup';\n\ntype DropdownMenuGroupElement = React.ElementRef<typeof MenuPrimitive.Group>;\ntype MenuGroupProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Group>;\ninterface DropdownMenuGroupProps extends MenuGroupProps {}\n\nconst DropdownMenuGroup = React.forwardRef<DropdownMenuGroupElement, DropdownMenuGroupProps>(\n  (props: ScopedProps<DropdownMenuGroupProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...groupProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Group {...menuScope} {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'DropdownMenuLabel';\n\ntype DropdownMenuLabelElement = React.ElementRef<typeof MenuPrimitive.Label>;\ntype MenuLabelProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Label>;\ninterface DropdownMenuLabelProps extends MenuLabelProps {}\n\nconst DropdownMenuLabel = React.forwardRef<DropdownMenuLabelElement, DropdownMenuLabelProps>(\n  (props: ScopedProps<DropdownMenuLabelProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...labelProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Label {...menuScope} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'DropdownMenuItem';\n\ntype DropdownMenuItemElement = React.ElementRef<typeof MenuPrimitive.Item>;\ntype MenuItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Item>;\ninterface DropdownMenuItemProps extends MenuItemProps {}\n\nconst DropdownMenuItem = React.forwardRef<DropdownMenuItemElement, DropdownMenuItemProps>(\n  (props: ScopedProps<DropdownMenuItemProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...itemProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Item {...menuScope} {...itemProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'DropdownMenuCheckboxItem';\n\ntype DropdownMenuCheckboxItemElement = React.ElementRef<typeof MenuPrimitive.CheckboxItem>;\ntype MenuCheckboxItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.CheckboxItem>;\ninterface DropdownMenuCheckboxItemProps extends MenuCheckboxItemProps {}\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  DropdownMenuCheckboxItemElement,\n  DropdownMenuCheckboxItemProps\n>((props: ScopedProps<DropdownMenuCheckboxItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...checkboxItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.CheckboxItem {...menuScope} {...checkboxItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'DropdownMenuRadioGroup';\n\ntype DropdownMenuRadioGroupElement = React.ElementRef<typeof MenuPrimitive.RadioGroup>;\ntype MenuRadioGroupProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioGroup>;\ninterface DropdownMenuRadioGroupProps extends MenuRadioGroupProps {}\n\nconst DropdownMenuRadioGroup = React.forwardRef<\n  DropdownMenuRadioGroupElement,\n  DropdownMenuRadioGroupProps\n>((props: ScopedProps<DropdownMenuRadioGroupProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioGroupProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioGroup {...menuScope} {...radioGroupProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'DropdownMenuRadioItem';\n\ntype DropdownMenuRadioItemElement = React.ElementRef<typeof MenuPrimitive.RadioItem>;\ntype MenuRadioItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioItem>;\ninterface DropdownMenuRadioItemProps extends MenuRadioItemProps {}\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  DropdownMenuRadioItemElement,\n  DropdownMenuRadioItemProps\n>((props: ScopedProps<DropdownMenuRadioItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioItem {...menuScope} {...radioItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'DropdownMenuItemIndicator';\n\ntype DropdownMenuItemIndicatorElement = React.ElementRef<typeof MenuPrimitive.ItemIndicator>;\ntype MenuItemIndicatorProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.ItemIndicator>;\ninterface DropdownMenuItemIndicatorProps extends MenuItemIndicatorProps {}\n\nconst DropdownMenuItemIndicator = React.forwardRef<\n  DropdownMenuItemIndicatorElement,\n  DropdownMenuItemIndicatorProps\n>((props: ScopedProps<DropdownMenuItemIndicatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...itemIndicatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.ItemIndicator {...menuScope} {...itemIndicatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuItemIndicator.displayName = INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'DropdownMenuSeparator';\n\ntype DropdownMenuSeparatorElement = React.ElementRef<typeof MenuPrimitive.Separator>;\ntype MenuSeparatorProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Separator>;\ninterface DropdownMenuSeparatorProps extends MenuSeparatorProps {}\n\nconst DropdownMenuSeparator = React.forwardRef<\n  DropdownMenuSeparatorElement,\n  DropdownMenuSeparatorProps\n>((props: ScopedProps<DropdownMenuSeparatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...separatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.Separator {...menuScope} {...separatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'DropdownMenuArrow';\n\ntype DropdownMenuArrowElement = React.ElementRef<typeof MenuPrimitive.Arrow>;\ntype MenuArrowProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Arrow>;\ninterface DropdownMenuArrowProps extends MenuArrowProps {}\n\nconst DropdownMenuArrow = React.forwardRef<DropdownMenuArrowElement, DropdownMenuArrowProps>(\n  (props: ScopedProps<DropdownMenuArrowProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...arrowProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Arrow {...menuScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSub\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DropdownMenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst DropdownMenuSub: React.FC<DropdownMenuSubProps> = (\n  props: ScopedProps<DropdownMenuSubProps>\n) => {\n  const { __scopeDropdownMenu, children, open: openProp, onOpenChange, defaultOpen } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <MenuPrimitive.Sub {...menuScope} open={open} onOpenChange={setOpen}>\n      {children}\n    </MenuPrimitive.Sub>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'DropdownMenuSubTrigger';\n\ntype DropdownMenuSubTriggerElement = React.ElementRef<typeof MenuPrimitive.SubTrigger>;\ntype MenuSubTriggerProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.SubTrigger>;\ninterface DropdownMenuSubTriggerProps extends MenuSubTriggerProps {}\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  DropdownMenuSubTriggerElement,\n  DropdownMenuSubTriggerProps\n>((props: ScopedProps<DropdownMenuSubTriggerProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...subTriggerProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.SubTrigger {...menuScope} {...subTriggerProps} ref={forwardedRef} />;\n});\n\nDropdownMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'DropdownMenuSubContent';\n\ntype DropdownMenuSubContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuSubContentProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.SubContent>;\ninterface DropdownMenuSubContentProps extends MenuSubContentProps {}\n\nconst DropdownMenuSubContent = React.forwardRef<\n  DropdownMenuSubContentElement,\n  DropdownMenuSubContentProps\n>((props: ScopedProps<DropdownMenuSubContentProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...subContentProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n\n  return (\n    <MenuPrimitive.SubContent\n      {...menuScope}\n      {...subContentProps}\n      ref={forwardedRef}\n      style={{\n        ...props.style,\n        // re-namespace exposed content custom properties\n        ...{\n          '--radix-dropdown-menu-content-transform-origin': 'var(--radix-popper-transform-origin)',\n          '--radix-dropdown-menu-content-available-width': 'var(--radix-popper-available-width)',\n          '--radix-dropdown-menu-content-available-height': 'var(--radix-popper-available-height)',\n          '--radix-dropdown-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n          '--radix-dropdown-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n        },\n      }}\n    />\n  );\n});\n\nDropdownMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = DropdownMenu;\nconst Trigger = DropdownMenuTrigger;\nconst Portal = DropdownMenuPortal;\nconst Content = DropdownMenuContent;\nconst Group = DropdownMenuGroup;\nconst Label = DropdownMenuLabel;\nconst Item = DropdownMenuItem;\nconst CheckboxItem = DropdownMenuCheckboxItem;\nconst RadioGroup = DropdownMenuRadioGroup;\nconst RadioItem = DropdownMenuRadioItem;\nconst ItemIndicator = DropdownMenuItemIndicator;\nconst Separator = DropdownMenuSeparator;\nconst Arrow = DropdownMenuArrow;\nconst Sub = DropdownMenuSub;\nconst SubTrigger = DropdownMenuSubTrigger;\nconst SubContent = DropdownMenuSubContent;\n\nexport {\n  createDropdownMenuScope,\n  //\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuPortal,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuItemIndicator,\n  DropdownMenuSeparator,\n  DropdownMenuArrow,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  DropdownMenuProps,\n  DropdownMenuTriggerProps,\n  DropdownMenuPortalProps,\n  DropdownMenuContentProps,\n  DropdownMenuGroupProps,\n  DropdownMenuLabelProps,\n  DropdownMenuItemProps,\n  DropdownMenuCheckboxItemProps,\n  DropdownMenuRadioGroupProps,\n  DropdownMenuRadioItemProps,\n  DropdownMenuItemIndicatorProps,\n  DropdownMenuSeparatorProps,\n  DropdownMenuArrowProps,\n  DropdownMenuSubProps,\n  DropdownMenuSubTriggerProps,\n  DropdownMenuSubContentProps,\n};\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ui/DropdownMenu.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ui/DropdownMenu.tsx\");\n  import.meta.hot.lastModified = \"1706454925344.128\";\n}\n// REMIX HMR END\n\nimport { DropdownMenuContentShad, DropdownMenuItemShad, DropdownMenuLabelShad, DropdownMenuPortalShad, DropdownMenuSeparatorShad, DropdownMenuShad, DropdownMenuSubContentShad, DropdownMenuSubShad, DropdownMenuSubTriggerShad, DropdownMenuTriggerShad } from '~/components/ui/shadUi/ui/dropdown-menu';\nexport function DropdownMenu({\n  trigger,\n  dropdownMenuContent,\n  triggerClassName\n}) {\n  return <DropdownMenuShad>\n      <DropdownMenuTriggerShad className={triggerClassName}>\n        {trigger}\n      </DropdownMenuTriggerShad>\n      <DropdownMenuContentShad className=\"w-56\">\n        {dropdownMenuContent.map((item, index) => {\n        if (item.label) {\n          return <DropdownMenuLabelShad key={index} onClick={event => {\n            event.stopPropagation();\n            item.onClick && item.onClick();\n          }} className={`${item.onClick ? 'cursor-pointer' : ''}`}>\n                {item.displayText}\n              </DropdownMenuLabelShad>;\n        }\n        if (item.separator) {\n          return <DropdownMenuSeparatorShad key={index} onClick={item.onClick} className={`${item.onClick ? 'cursor-pointer' : ''}`} />;\n        }\n        if (item.subMenu) {\n          return <DropdownMenuSubShad key={index}>\n                <DropdownMenuSubTriggerShad>\n                  {item.subMenu.trigger}\n                </DropdownMenuSubTriggerShad>\n                <DropdownMenuPortalShad>\n                  <DropdownMenuSubContentShad>\n                    {item.subMenu.content.map((subItem, index) => {\n                  if (subItem.label) {\n                    return <DropdownMenuLabelShad key={index} onClick={event => {\n                      event.stopPropagation();\n                      item.onClick && item.onClick();\n                    }} className={`${item.onClick ? 'cursor-pointer' : ''}`}>\n                            {subItem.displayText}\n                          </DropdownMenuLabelShad>;\n                  }\n                  if (subItem.separator) {\n                    return <DropdownMenuSeparatorShad key={index} onClick={event => {\n                      event.stopPropagation();\n                      item.onClick && item.onClick();\n                    }} className={`${item.onClick ? 'cursor-pointer' : ''}`} />;\n                  }\n                  return <DropdownMenuItemShad key={index} onClick={event => {\n                    event.stopPropagation();\n                    item.onClick && item.onClick();\n                  }} className={`${item.onClick ? 'cursor-pointer' : ''}`} disabled={item.disabled}>\n                          {item.displayText}\n                        </DropdownMenuItemShad>;\n                })}\n                  </DropdownMenuSubContentShad>\n                </DropdownMenuPortalShad>\n              </DropdownMenuSubShad>;\n        }\n        return <DropdownMenuItemShad key={index} className={`${item.onClick ? 'cursor-pointer' : ''}`} onClick={event => {\n          event.stopPropagation();\n          item.onClick && item.onClick();\n        }} disabled={item.disabled}>\n              {item.displayText}\n            </DropdownMenuItemShad>;\n      })}\n      </DropdownMenuContentShad>\n    </DropdownMenuShad>;\n}\n_c = DropdownMenu;\nvar _c;\n$RefreshReg$(_c, \"DropdownMenu\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ui/shadUi/ui/table.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ui/shadUi/ui/table.tsx\");\n  import.meta.hot.lastModified = \"1705519263367.4775\";\n}\n// REMIX HMR END\n\nimport * as React from 'react';\nimport { cn } from '~/components/ui/shadUi/utils';\nconst TableShad = React.forwardRef(_c = ({\n  className,\n  ...props\n}, ref) => <div className=\"w-full overflow-auto\">\n    <table ref={ref} className={cn('w-full caption-bottom  text-sm tabular-nums', className)} {...props} />\n  </div>);\n_c2 = TableShad;\nTableShad.displayName = 'Table';\nconst TableHeaderShad = React.forwardRef(_c3 = ({\n  className,\n  ...props\n}, ref) => <thead ref={ref} className={cn('text-left [&_tr]:border-b-4', className)} {...props} />);\n_c4 = TableHeaderShad;\nTableHeaderShad.displayName = 'TableHeaderShad';\nconst TableBodyShad = React.forwardRef(_c5 = ({\n  className,\n  ...props\n}, ref) => <tbody ref={ref} className={cn('[&_tr:last-child]:border-0', className)} {...props} />);\n_c6 = TableBodyShad;\nTableBodyShad.displayName = 'TableBodyShad';\nconst TableFooterShad = React.forwardRef(_c7 = ({\n  className,\n  ...props\n}, ref) => <tfoot ref={ref} className={cn('bg-primary font-medium text-primary-foreground', className)} {...props} />);\n_c8 = TableFooterShad;\nTableFooterShad.displayName = 'TableFooterShad';\nconst TableRowShad = React.forwardRef(_c9 = ({\n  className,\n  ...props\n}, ref) => <tr ref={ref} className={cn('border-b-4 transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted', className)} {...props} />);\n_c10 = TableRowShad;\nTableRowShad.displayName = 'TableRowShad';\nconst TableHeadShad = React.forwardRef(_c11 = ({\n  className,\n  ...props\n}, ref) => <th ref={ref} className={cn('h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0', className)} {...props} />);\n_c12 = TableHeadShad;\nTableHeadShad.displayName = 'TableHead';\nconst TableCellShad = React.forwardRef(_c13 = ({\n  className,\n  ...props\n}, ref) => <td ref={ref} className={cn('overflow-hidden text-ellipsis whitespace-nowrap p-4 text-left align-middle [&:has([role=checkbox])]:pr-0', className)} {...props} />);\n_c14 = TableCellShad;\nTableCellShad.displayName = 'TableCellShad';\nconst TableCaptionShad = React.forwardRef(_c15 = ({\n  className,\n  ...props\n}, ref) => <caption ref={ref} className={cn('mt-4 text-sm text-muted-foreground', className)} {...props} />);\n_c16 = TableCaptionShad;\nTableCaptionShad.displayName = 'TableCaptionShad';\nexport { TableShad, TableHeaderShad, TableBodyShad, TableFooterShad, TableHeadShad, TableRowShad, TableCellShad, TableCaptionShad };\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n$RefreshReg$(_c, \"TableShad$React.forwardRef\");\n$RefreshReg$(_c2, \"TableShad\");\n$RefreshReg$(_c3, \"TableHeaderShad$React.forwardRef\");\n$RefreshReg$(_c4, \"TableHeaderShad\");\n$RefreshReg$(_c5, \"TableBodyShad$React.forwardRef\");\n$RefreshReg$(_c6, \"TableBodyShad\");\n$RefreshReg$(_c7, \"TableFooterShad$React.forwardRef\");\n$RefreshReg$(_c8, \"TableFooterShad\");\n$RefreshReg$(_c9, \"TableRowShad$React.forwardRef\");\n$RefreshReg$(_c10, \"TableRowShad\");\n$RefreshReg$(_c11, \"TableHeadShad$React.forwardRef\");\n$RefreshReg$(_c12, \"TableHeadShad\");\n$RefreshReg$(_c13, \"TableCellShad$React.forwardRef\");\n$RefreshReg$(_c14, \"TableCellShad\");\n$RefreshReg$(_c15, \"TableCaptionShad$React.forwardRef\");\n$RefreshReg$(_c16, \"TableCaptionShad\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ui/Table.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ui/Table.tsx\");\n  import.meta.hot.lastModified = \"1705519263365.1128\";\n}\n// REMIX HMR END\n\nimport { TableBodyShad, TableCellShad, TableHeadShad, TableHeaderShad, TableRowShad, TableShad } from '~/components/ui/shadUi/ui/table';\n\n//GENERAL RULES FOR TABLES\n/*\n- Dates/ any numbers should be right-aligned\n- Truncate text don\u2019t stack\n- make sure text is one line and truncates with ellipsis\n*/\n\nexport const Table = ({\n  headers,\n  rows\n}) => <TableShad>\n    <TableHeaderShad>\n      <TableRowShad>\n        {headers.map((header, index) => <TableHeadShad key={index}>{header}</TableHeadShad>)}\n      </TableRowShad>\n    </TableHeaderShad>\n    <TableBodyShad>\n      {rows.map((row, index) => <TableRowShad onClick={row.onClick} className={`${row.onClick && 'cursor-pointer'}`} key={index}>\n          {row.content.map((cell, index) => {\n        return <TableCellShad key={index} className={`text-left ${cell.align === 'right' && 'text-right'}`}>\n                {cell.content}\n              </TableCellShad>;\n      })}\n        </TableRowShad>)}\n    </TableBodyShad>\n  </TableShad>;\n_c = Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ui/TableSelectBottomBar.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ui/TableSelectBottomBar.tsx\");\n  import.meta.hot.lastModified = \"1705519263365.1936\";\n}\n// REMIX HMR END\n\nimport { CheckBox } from './Checkbox';\nexport const TableSelectBottomBar = ({\n  children,\n  numberSelected\n}) => {\n  return <div className=\" shadow-[0 2px 8px rgba(0, 0, 0, 0.2)] absolute bottom-20 left-0 z-30 flex w-full items-center bg-slate-300 p-2 md:bottom-0 md:left-24 md:w-[calc(100%-6rem)]\">\n      {numberSelected && <div className=\"pl-20\">\n          <CheckBox uniqueName=\"selectAllBar\" onChange={() => {}} checked disabled label={`Selected (${numberSelected})`} />\n        </div>}\n      <div className=\"ml-auto flex\">{children}</div>\n    </div>;\n};\n_c = TableSelectBottomBar;\nvar _c;\n$RefreshReg$(_c, \"TableSelectBottomBar\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["SELECTION_KEYS", "FIRST_KEYS", "LAST_KEYS", "FIRST_LAST_KEYS", "SUB_OPEN_KEYS", "ltr", "rtl", "SUB_CLOSE_KEYS", "MENU_NAME", "Collection", "useCollection", "createCollectionScope", "createCollection", "createMenuContext", "createMenuScope", "createContextScope", "createPopperScope", "createRovingFocusGroupScope", "usePopperScope", "useRovingFocusGroupScope", "MenuProvider", "useMenuContext", "MenuRootProvider", "useMenuRootContext", "Menu", "props", "modal", "popperScope", "__scopeMenu", "content", "setContent", "React", "isUsingKeyboardRef", "handleOpenChange", "useCallbackRef", "onOpenChange", "direction", "useDirection", "dir", "handleKeyDown", "current", "document", "addEventListener", "handlePointer", "capture", "once", "removeEventListener", "$epM9y$createElement", "children", "MenuAnchor", "React", "props", "forwardedRef", "anchorProps", "popperScope", "usePopperScope", "__scopeMenu", "$epM9y$createElement", "PORTAL_NAME", "PortalProvider", "usePortalContext", "createMenuContext", "forceMount", "undefined", "MenuPortal", "props", "container", "context", "useMenuContext", "__scopeMenu", "$epM9y$createElement", "open", "children", "CONTENT_NAME", "MenuContentProvider", "useMenuContentContext", "createMenuContext", "MenuContent", "React", "props", "forwardedRef", "portalContext", "usePortalContext", "__scopeMenu", "forceMount", "contentProps", "context", "useMenuContext", "rootContext", "useMenuRootContext", "$epM9y$createElement", "open", "modal", "MenuRootContentModal", "ref", "composedRefs", "useComposedRefs", "content", "current", "hideOthers", "composeEventHandlers", "onFocusOutside", "event", "preventDefault", "checkForDefaultPrevented", "onOpenChange", "MenuRootContentNonModal", "MenuContentImpl", "popperScope", "usePopperScope", "rovingFocusGroupScope", "useRovingFocusGroupScope", "getItems", "useCollection", "currentItemId", "setCurrentItemId", "contentRef", "onContentChange", "timerRef", "searchRef", "pointerGraceTimerRef", "pointerGraceIntentRef", "pointerDirRef", "lastPointerXRef", "ScrollLockWrapper", "disableOutsideScroll", "RemoveScroll", "scrollLockWrapperProps", "as", "Slot", "allowPinchZoom", "undefined", "handleTypeaheadSearch", "key", "search", "items", "filter", "item", "disabled", "currentItem", "document", "activeElement", "currentMatch", "find", "textValue", "values", "map", "nextMatch", "getNextMatch", "newItem", "updateSearch", "value", "window", "clearTimeout", "setTimeout", "focus", "useFocusGuards", "isPointerMovingToSubmenu", "isMovingTowards", "side", "isPointerInGraceArea", "area", "intent", "trapFocus", "onOpenAutoFocus", "onCloseAutoFocus", "dir", "onEntryFocus", "isUsingKeyboardRef", "getOpenState", "outline", "style", "onKeyDown", "target", "isKeyDownInside", "closest", "currentTarget", "isModifierKey", "ctrlKey", "altKey", "metaKey", "isCharacterKey", "length", "FIRST_LAST_KEYS", "includes", "candidateNodes", "LAST_KEYS", "reverse", "focusFirst", "onBlur", "contains", "onPointerMove", "whenMouse", "pointerXHasChanged", "clientX", "newDir", "MenuLabel", "React", "props", "forwardedRef", "labelProps", "$epM9y$createElement", "ITEM_NAME", "ITEM_SELECT", "MenuItem", "React", "props", "forwardedRef", "itemProps", "ref", "rootContext", "useMenuRootContext", "__scopeMenu", "contentContext", "useMenuContentContext", "composedRefs", "useComposedRefs", "isPointerDownRef", "handleSelect", "menuItem", "current", "disabled", "itemSelectEvent", "CustomEvent", "bubbles", "cancelable", "addEventListener", "event", "onSelect", "once", "dispatchDiscreteCustomEvent", "defaultPrevented", "onClose", "$epM9y$createElement", "composeEventHandlers", "onClick", "onPointerDown", "onPointerUp", "currentTarget", "click", "onKeyDown", "isTypingAhead", "searchRef", "key", "SELECTION_KEYS", "includes", "preventDefault", "MenuItemImpl", "React", "props", "forwardedRef", "itemProps", "contentContext", "useMenuContentContext", "ITEM_NAME", "__scopeMenu", "rovingFocusGroupScope", "useRovingFocusGroupScope", "ref", "composedRefs", "useComposedRefs", "isFocused", "setIsFocused", "textContent", "setTextContent", "menuItem", "current", "trim", "children", "$epM9y$createElement", "textValue", "disabled", "undefined", "composeEventHandlers", "onPointerMove", "whenMouse", "event", "onItemLeave", "onItemEnter", "defaultPrevented", "item", "currentTarget", "focus", "onPointerLeave", "onFocus", "onBlur", "MenuCheckboxItem", "React", "props", "forwardedRef", "checkboxItemProps", "$epM9y$createElement", "__scopeMenu", "isIndeterminate", "checked", "getCheckedState", "composeEventHandlers", "onSelect", "onCheckedChange", "checkForDefaultPrevented", "RADIO_GROUP_NAME", "RadioGroupProvider", "useRadioGroupContext", "createMenuContext", "value", "undefined", "onValueChange", "RADIO_ITEM_NAME", "MenuRadioItem", "React", "props", "forwardedRef", "radioItemProps", "context", "useRadioGroupContext", "__scopeMenu", "checked", "value", "$epM9y$createElement", "getCheckedState", "composeEventHandlers", "onSelect", "onValueChange", "checkForDefaultPrevented", "ITEM_INDICATOR_NAME", "ItemIndicatorProvider", "useItemIndicatorContext", "createMenuContext", "checked", "MenuItemIndicator", "React", "props", "forwardedRef", "itemIndicatorProps", "indicatorContext", "__scopeMenu", "$epM9y$createElement", "forceMount", "isIndeterminate", "getCheckedState", "MenuSeparator", "React", "props", "forwardedRef", "separatorProps", "$epM9y$createElement", "SUB_NAME", "MenuSubProvider", "useMenuSubContext", "createMenuContext", "MenuSub", "props", "onOpenChange", "parentMenuContext", "useMenuContext", "__scopeMenu", "popperScope", "usePopperScope", "trigger", "setTrigger", "React", "content", "setContent", "handleOpenChange", "useCallbackRef", "open", "$epM9y$createElement", "useId", "children", "SUB_TRIGGER_NAME", "MenuSubTrigger", "React", "props", "forwardedRef", "context", "useMenuContext", "__scopeMenu", "rootContext", "useMenuRootContext", "subContext", "useMenuSubContext", "contentContext", "useMenuContentContext", "openTimerRef", "onPointerGraceIntentChange", "scope", "clearOpenTimer", "current", "window", "clearTimeout", "pointerGraceTimer", "pointerGraceTimerRef", "$epM9y$createElement", "triggerId", "open", "contentId", "getOpenState", "composeRefs", "onTriggerChange", "event", "onClick", "disabled", "defaultPrevented", "currentTarget", "focus", "onOpenChange", "composeEventHandlers", "onPointerMove", "whenMouse", "onItemEnter", "setTimeout", "onPointerLeave", "contentRect", "content", "getBoundingClientRect", "side", "dataset", "rightSide", "bleed", "contentNearEdge", "contentFarEdge", "area", "x", "clientX", "y", "clientY", "top", "bottom", "onTriggerLeave", "onKeyDown", "isTypingAhead", "searchRef", "key", "SUB_OPEN_KEYS", "dir", "includes", "preventDefault", "SUB_CONTENT_NAME", "MenuSubContent", "React", "props", "forwardedRef", "portalContext", "usePortalContext", "CONTENT_NAME", "__scopeMenu", "forceMount", "subContentProps", "context", "useMenuContext", "rootContext", "useMenuRootContext", "subContext", "useMenuSubContext", "ref", "composedRefs", "useComposedRefs", "$epM9y$createElement", "open", "contentId", "triggerId", "dir", "event", "isUsingKeyboardRef", "current", "focus", "preventDefault", "composeEventHandlers", "onFocusOutside", "target", "trigger", "onOpenChange", "onEscapeKeyDown", "onClose", "onKeyDown", "isKeyDownInside", "currentTarget", "contains", "isCloseKey", "SUB_CLOSE_KEYS", "includes", "key", "getOpenState", "open", "isIndeterminate", "checked", "getCheckedState", "focusFirst", "candidates", "PREVIOUSLY_FOCUSED_ELEMENT", "document", "activeElement", "candidate", "focus", "wrapArray", "array", "startIndex", "map", "_", "index", "length", "getNextMatch", "values", "search", "currentMatch", "isRepeated", "Array", "from", "every", "char", "normalizedSearch", "currentMatchIndex", "indexOf", "wrappedValues", "Math", "max", "excludeCurrentMatch", "filter", "v", "nextMatch", "find", "value", "toLowerCase", "startsWith", "undefined", "isPointInPolygon", "point", "polygon", "y", "inside", "i", "j", "xi", "x", "yi", "xj", "yj", "intersect", "isPointerInGraceArea", "event", "area", "cursorPos", "clientX", "clientY", "whenMouse", "handler", "pointerType", "Root", "Menu", "Anchor", "MenuAnchor", "Portal", "MenuPortal", "Content", "MenuContent", "Label", "MenuLabel", "Item", "MenuItem", "CheckboxItem", "MenuCheckboxItem", "RadioItem", "MenuRadioItem", "ItemIndicator", "MenuItemIndicator", "Separator", "MenuSeparator", "Sub", "MenuSub", "SubTrigger", "MenuSubTrigger", "SubContent", "MenuSubContent", "DROPDOWN_MENU_NAME", "createDropdownMenuContext", "createDropdownMenuScope", "createContextScope", "createMenuScope", "useMenuScope", "DropdownMenuProvider", "useDropdownMenuContext", "DropdownMenu", "props", "open", "openProp", "modal", "menuScope", "__scopeDropdownMenu", "triggerRef", "React", "setOpen", "useControllableState", "prop", "defaultProp", "defaultOpen", "onChange", "onOpenChange", "$9kmUS$createElement", "useId", "prevOpen", "children", "TRIGGER_NAME", "DropdownMenuTrigger", "React", "props", "forwardedRef", "triggerProps", "context", "useDropdownMenuContext", "__scopeDropdownMenu", "menuScope", "useMenuScope", "$9kmUS$createElement", "triggerId", "open", "contentId", "undefined", "disabled", "composeRefs", "triggerRef", "composeEventHandlers", "onPointerDown", "event", "button", "ctrlKey", "onOpenToggle", "preventDefault", "onKeyDown", "includes", "key", "onOpenChange", "DropdownMenuPortal", "props", "portalProps", "menuScope", "useMenuScope", "__scopeDropdownMenu", "$9kmUS$createElement", "CONTENT_NAME", "DropdownMenuContent", "React", "props", "forwardedRef", "contentProps", "context", "useDropdownMenuContext", "__scopeDropdownMenu", "menuScope", "useMenuScope", "hasInteractedOutsideRef", "$9kmUS$createElement", "contentId", "triggerId", "composeEventHandlers", "onCloseAutoFocus", "event", "current", "triggerRef", "focus", "preventDefault", "onInteractOutside", "originalEvent", "detail", "ctrlLeftClick", "button", "ctrlKey", "isRightClick", "modal", "style", "DropdownMenuLabel", "React", "props", "forwardedRef", "labelProps", "menuScope", "useMenuScope", "__scopeDropdownMenu", "$9kmUS$createElement", "DropdownMenuItem", "React", "props", "forwardedRef", "itemProps", "menuScope", "useMenuScope", "__scopeDropdownMenu", "$9kmUS$createElement", "DropdownMenuCheckboxItem", "React", "props", "forwardedRef", "checkboxItemProps", "menuScope", "useMenuScope", "__scopeDropdownMenu", "$9kmUS$createElement", "DropdownMenuRadioItem", "React", "props", "forwardedRef", "radioItemProps", "menuScope", "useMenuScope", "__scopeDropdownMenu", "$9kmUS$createElement", "DropdownMenuItemIndicator", "React", "props", "forwardedRef", "itemIndicatorProps", "menuScope", "useMenuScope", "__scopeDropdownMenu", "$9kmUS$createElement", "DropdownMenuSeparator", "React", "props", "forwardedRef", "separatorProps", "menuScope", "useMenuScope", "__scopeDropdownMenu", "$9kmUS$createElement", "DropdownMenuSub", "props", "open", "openProp", "defaultOpen", "menuScope", "useMenuScope", "__scopeDropdownMenu", "setOpen", "useControllableState", "prop", "defaultProp", "onChange", "onOpenChange", "$9kmUS$createElement", "children", "DropdownMenuSubTrigger", "React", "props", "forwardedRef", "subTriggerProps", "menuScope", "useMenuScope", "__scopeDropdownMenu", "$9kmUS$createElement", "DropdownMenuSubContent", "React", "props", "forwardedRef", "subContentProps", "menuScope", "useMenuScope", "__scopeDropdownMenu", "$9kmUS$createElement", "style", "Root", "DropdownMenu", "Trigger", "DropdownMenuTrigger", "Portal", "DropdownMenuPortal", "Content", "DropdownMenuContent", "Label", "DropdownMenuLabel", "Item", "DropdownMenuItem", "CheckboxItem", "DropdownMenuCheckboxItem", "RadioItem", "DropdownMenuRadioItem", "ItemIndicator", "DropdownMenuItemIndicator", "Separator", "DropdownMenuSeparator", "Sub", "DropdownMenuSub", "SubTrigger", "DropdownMenuSubTrigger", "SubContent", "DropdownMenuSubContent", "import_jsx_dev_runtime", "index", "_c", "React", "import_jsx_dev_runtime", "_c", "_c2", "_c3", "_c4", "_c5", "_c6", "_c7", "_c8", "_c9", "_c10", "_c11", "_c12", "_c13", "_c14", "_c15", "_c16", "_c", "_c2", "_c3", "_c4", "_c5", "_c6", "_c7", "_c8", "_c9", "_c10", "_c11", "_c12", "_c13", "_c14", "_c15", "_c16", "import_jsx_dev_runtime", "index", "_c", "import_jsx_dev_runtime", "_c"]
}
