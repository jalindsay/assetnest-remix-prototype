{
  "version": 3,
  "sources": ["../../../app/utils/getInpectionInstanceStatusChip.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/utils/getInpectionInstanceStatusChip.tsx\"\n);\nimport.meta.hot.lastModified = \"1706454925364.8354\";\n}\n// REMIX HMR END\n\nimport type { InspectionInstanceStatus } from '@prisma/client'\nimport { Icon } from '~/components/ui/Icon'\nimport {\n  chip,\n  chipBlueColor,\n  chipGreenColor,\n  chipYellowColor,\n} from '~/styles/genericStyles'\n\nexport const getInspectionInstanceStatusChip = (\n  status: InspectionInstanceStatus,\n) => {\n  switch (status) {\n    case 'COMPLETED':\n      return (\n        <div className={`flex ${chipGreenColor} ${chip} w-fit`}>\n          <Icon icon=\"success\" className=\"pr-2\" />\n          Completed\n        </div>\n      )\n\n    case 'SCHEDULED':\n      return (\n        <div className={`flex ${chipBlueColor} ${chip} w-fit `}>\n          <div className=\"flex items-center justify-center px-2\">\n            <Icon icon=\"clock\" className=\"pr-2\" />\n            Scheduled\n          </div>\n        </div>\n      )\n    case 'STARTED':\n      return (\n        <div className={`flex ${chipYellowColor} ${chip} w-fit`}>Started</div>\n      )\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AA2BU;AAzBV,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;AAYO,IAAM,kCAAkC,CAC7C,WACG;AACH,UAAQ,QAAQ;AAAA,IACd,KAAK;AACH,aACE,mDAAC,SAAI,WAAW,QAAQ,kBAAkB,cACxC;AAAA,2DAAC,QAAK,MAAK,WAAU,WAAU,UAA/B;AAAA;AAAA;AAAA;AAAA,eAAsC;AAAA,QAAE;AAAA,WAD1C;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,IAGJ,KAAK;AACH,aACE,mDAAC,SAAI,WAAW,QAAQ,iBAAiB,eACvC,6DAAC,SAAI,WAAU,yCACb;AAAA,2DAAC,QAAK,MAAK,SAAQ,WAAU,UAA7B;AAAA;AAAA;AAAA;AAAA,eAAoC;AAAA,QAAE;AAAA,WADxC;AAAA;AAAA;AAAA;AAAA,aAGA,KAJF;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,IAEJ,KAAK;AACH,aACE,mDAAC,SAAI,WAAW,QAAQ,mBAAmB,cAAc,uBAAzD;AAAA;AAAA;AAAA;AAAA,aAAgE;AAAA,EAEtE;AACF;",
  "names": []
}
