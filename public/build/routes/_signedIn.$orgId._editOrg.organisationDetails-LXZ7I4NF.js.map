{
  "version": 3,
  "sources": ["../../../app/routes/_signedIn.$orgId._editOrg.organisationDetails.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_signedIn.$orgId._editOrg.organisationDetails.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_signedIn.$orgId._editOrg.organisationDetails.tsx\");\n  import.meta.hot.lastModified = \"1706454925354.2332\";\n}\n// REMIX HMR END\n\nimport { Form, useActionData, useLoaderData } from '@remix-run/react';\nimport { useEffect, useState } from 'react';\nimport Alert from '~/components/ui/Alert';\nimport { Avatar } from '~/components/ui/Avatar';\nimport Button from '~/components/ui/Button';\nimport { Icon } from '~/components/ui/Icon';\nimport { TextArea } from '~/components/ui/TextArea';\nimport { TextInput } from '~/components/ui/TextInput';\nimport { getSession } from '~/cookies';\nimport { getMembershipWithUserAndOrganisation } from '~/endpoints/membership';\nimport { updateOrganisation } from '~/endpoints/organisation';\nimport { getStorage } from '~/utils/storage.server';\nimport { v4 as uuidv4 } from 'uuid';\nimport { resizeImage } from '~/utils/resizeImage.server';\nimport { LabelShad } from '~/components/ui/shadUi/ui/label';\nimport { secondaryText } from '~/styles/typography';\nexport async function action({\n  params,\n  request\n}) {\n  const body = await request.formData();\n  const name = body.get('organisationName');\n  const description = body.get('description');\n  const orgPicture = body.get('orgPicture');\n  const removeOrgPicture = body.get('removeOrgPicture');\n  let orgNameError = '';\n  if (!name || name.trim() === '') {\n    orgNameError = 'Organisation name is required';\n    return {\n      success: false,\n      orgNameError: orgNameError\n    };\n  }\n  const session = await getSession(request.headers.get('Cookie'));\n  const userId = session.get('userId') ?? -1;\n  const orgId = parseInt(params.orgId ?? '-1');\n\n  // Saving the org picture\n  let imageUuid = undefined;\n  if (orgPicture !== null && orgPicture.size > 0) {\n    const resizedImage = await resizeImage(orgPicture);\n    imageUuid = uuidv4();\n    await getStorage().from('assetnest').upload('organisations/' + imageUuid, resizedImage);\n  }\n  const org = await updateOrganisation({\n    userId,\n    orgId,\n    name,\n    description,\n    icon: removeOrgPicture === 'true' ? '' : imageUuid\n  });\n  return {\n    success: org\n  };\n}\nexport const loader = async ({\n  params,\n  request\n}) => {\n  const session = await getSession(request.headers.get('Cookie'));\n  const userId = session.get('userId') ?? -1;\n  const orgId = parseInt(params.orgId ?? '-1');\n  const membership = await getMembershipWithUserAndOrganisation({\n    userId,\n    orgId,\n    status: 'ACTIVE'\n  });\n  if (!membership) {\n    return null;\n  }\n  const updatePermission = membership?.role?.organisationUpdate ?? false;\n  const orgDetails = membership?.org;\n  if (orgDetails?.icon !== null) {\n    const orgPictureUrlObject = getStorage().from('assetnest').getPublicUrl('organisations/' + orgDetails?.icon ?? '');\n    orgDetails.icon = orgPictureUrlObject?.data?.publicUrl ?? '';\n  }\n  return {\n    organisationName: orgDetails?.name ?? '',\n    description: orgDetails?.description ?? '',\n    updatePermission: updatePermission,\n    orgPicture: orgDetails?.icon ?? ''\n  };\n};\nexport default function EditOrgDetails() {\n  _s();\n  const loaderData = useLoaderData();\n  const [organisationName, setOrganisationName] = useState(loaderData?.organisationName ?? '');\n  const [description, setDescription] = useState(loaderData?.description ?? '');\n  const [orgPicture, setOrgPicture] = useState(loaderData?.orgPicture ?? '');\n  const [displaySuccessAlert, setDisplaySuccessAlert] = useState(false);\n  const actionData = useActionData();\n  useEffect(() => {\n    if (actionData?.success) {\n      setDisplaySuccessAlert(!!actionData?.success ?? false);\n      setTimeout(() => setDisplaySuccessAlert(false), 5000);\n    }\n  }, [actionData]);\n  return <div className=\"flex w-full flex-col space-y-1.5 p-4 \">\n      {displaySuccessAlert && <Alert variant=\"success\" title={'Organisation Details Saved'} onClose={() => {\n      setDisplaySuccessAlert(false);\n    }} />}\n      <p className={`ps-2 ${secondaryText}`}>\n        Make changes to your organisation here. Click save when you're done.\n      </p>\n      <div className=\"md:w-96\">\n        <Form method=\"post\" encType=\"multipart/form-data\">\n          <div className={'p-2 '}>\n            <LabelShad className={'text-s pb-1 pl-1 text-left font-semibold'}>\n              Organisation Icon\n            </LabelShad>\n            <div className=\"pt-2\">\n              <label htmlFor=\"file\" className={''}>\n                <Avatar fallbackText={organisationName?.at(0)?.toUpperCase() ?? ''} imageSrc={orgPicture} imageAltText=\"Organisation Image\" className=\"z-10 flex h-36 w-36 cursor-pointer items-center justify-center rounded-xl bg-primary text-6xl text-white\" />\n\n                <div className=\"relative bottom-6 left-28 z-20 flex h-6 w-6 cursor-pointer items-center justify-center \">\n                  <Button className=\"pointer-events-none absolute z-10 mt-[-1.2rem] h-8 w-8\" variant=\"outline\" noPadding>\n                    <Icon icon=\"edit\" className=\" h-5 w-6\" />\n                  </Button>\n                </div>\n                <div className=\"absolute w-24\">\n                  <input id=\"file\" type=\"file\" accept=\".png, .jpg\" name=\"orgPicture\" onChange={async e => {\n                  if (e.target.files && e.target.files[0]) {\n                    setOrgPicture(URL.createObjectURL(e.target.files[0]));\n                  }\n                }} className=\"hidden  h-24 w-24\" />\n                  <input type=\"hidden\" name=\"removeOrgPicture\" value={orgPicture === '' ? 'true' : 'false'} className=\"hidden  h-24 w-24\" />\n                </div>\n              </label>\n            </div>\n          </div>\n          {orgPicture && <div className=\"p-1 pb-4 pt-2\">\n              <Button variant=\"outline\" onClick={() => setOrgPicture('')}>\n                Remove Icon\n              </Button>\n            </div>}\n          <TextInput name={'organisationName'} onChange={value => {\n          setOrganisationName(value);\n        }} value={organisationName} placeholder=\"Organisation Name\" label=\"Organisation Name\" error={!!actionData?.orgNameError} helpText={actionData?.orgNameError} disabled={!loaderData?.updatePermission} />\n          <TextArea name={'description'} onChange={value => {\n          setDescription(value);\n        }} value={description} placeholder=\"Description\" label=\"Description\" disabled={!loaderData?.updatePermission} />\n          <Button className=\"btn btn-primary ms-2\" submit={true} disabled={!loaderData?.updatePermission}>\n            Save Changes\n          </Button>\n        </Form>\n      </div>\n    </div>;\n}\n_s(EditOrgDetails, \"MqTYQoBrXzoB3S6iRHJ6QwV81Zo=\", false, function () {\n  return [useLoaderData, useActionData];\n});\n_c = EditOrgDetails;\nvar _c;\n$RefreshReg$(_c, \"EditOrgDetails\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAAA,gBAAoC;AAUpC,qBAA2B;AAE3B,yBAA4B;AAqFE;AAtH9B,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,mEAAqE,EAAE;AAAA,EAChH;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA8D;AAC9D,cAAY,IAAI,eAAe;AACjC;AAsFe,SAAR,iBAAkC;AAxGzC,cAAAC,KAAA;AAyGE,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,QAAM,CAAC,kBAAkB,mBAAmB,QAAI,yBAAS,8CAAY,qBAAZ,YAAgC,EAAE;AAC3F,QAAM,CAAC,aAAa,cAAc,QAAI,yBAAS,8CAAY,gBAAZ,YAA2B,EAAE;AAC5E,QAAM,CAAC,YAAY,aAAa,QAAI,yBAASA,MAAA,yCAAY,eAAZ,OAAAA,MAA0B,EAAE;AACzE,QAAM,CAAC,qBAAqB,sBAAsB,QAAI,wBAAS,KAAK;AACpE,QAAM,aAAa,cAAc;AACjC,+BAAU,MAAM;AACd,QAAI,yCAAY,SAAS;AACvB,6BAAuB,CAAC,EAAC,yCAAY,QAAgB;AACrD,iBAAW,MAAM,uBAAuB,KAAK,GAAG,GAAI;AAAA,IACtD;AAAA,EACF,GAAG,CAAC,UAAU,CAAC;AACf,SAAO,mDAAC,SAAI,WAAU,yCACjB;AAAA,2BAAuB,mDAAC,iBAAM,SAAQ,WAAU,OAAO,8BAA8B,SAAS,MAAM;AACrG,6BAAuB,KAAK;AAAA,IAC9B,KAF0B;AAAA;AAAA;AAAA;AAAA,WAEvB;AAAA,IACD,mDAAC,OAAE,WAAW,QAAQ,iBAAiB,oFAAvC;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,SAAI,WAAU,WACb,6DAAC,QAAK,QAAO,QAAO,SAAQ,uBAC1B;AAAA,yDAAC,SAAI,WAAW,QACd;AAAA,2DAAC,SAAU,WAAW,4CAA4C,iCAAlE;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,SAAI,WAAU,QACb,6DAAC,WAAM,SAAQ,QAAO,WAAW,IAC/B;AAAA,6DAAC,UAAO,eAAc,gEAAkB,GAAG,OAArB,mBAAyB,kBAAzB,YAA0C,IAAI,UAAU,YAAY,cAAa,sBAAqB,WAAU,8GAAtI;AAAA;AAAA;AAAA;AAAA,iBAAiP;AAAA,UAEjP,mDAAC,SAAI,WAAU,2FACb,6DAAC,kBAAO,WAAU,0DAAyD,SAAQ,WAAU,WAAS,MACpG,6DAAC,QAAK,MAAK,QAAO,WAAU,cAA5B;AAAA;AAAA;AAAA;AAAA,iBAAuC,KADzC;AAAA;AAAA;AAAA;AAAA,iBAEA,KAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UACA,mDAAC,SAAI,WAAU,iBACb;AAAA,+DAAC,WAAM,IAAG,QAAO,MAAK,QAAO,QAAO,cAAa,MAAK,cAAa,UAAU,OAAM,MAAK;AACxF,kBAAI,EAAE,OAAO,SAAS,EAAE,OAAO,MAAM,CAAC,GAAG;AACvC,8BAAc,IAAI,gBAAgB,EAAE,OAAO,MAAM,CAAC,CAAC,CAAC;AAAA,cACtD;AAAA,YACF,GAAG,WAAU,uBAJX;AAAA;AAAA;AAAA;AAAA,mBAI+B;AAAA,YAC/B,mDAAC,WAAM,MAAK,UAAS,MAAK,oBAAmB,OAAO,eAAe,KAAK,SAAS,SAAS,WAAU,uBAApG;AAAA;AAAA;AAAA;AAAA,mBAAwH;AAAA,eAN1H;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA,aAfF;AAAA;AAAA;AAAA;AAAA,eAgBA,KAjBF;AAAA;AAAA;AAAA;AAAA,eAkBA;AAAA,WAtBF;AAAA;AAAA;AAAA;AAAA,aAuBA;AAAA,MACC,cAAc,mDAAC,SAAI,WAAU,iBAC1B,6DAAC,kBAAO,SAAQ,WAAU,SAAS,MAAM,cAAc,EAAE,GAAG,2BAA5D;AAAA;AAAA;AAAA;AAAA,aAEA,KAHW;AAAA;AAAA;AAAA;AAAA,aAIb;AAAA,MACF,mDAAC,aAAU,MAAM,oBAAoB,UAAU,WAAS;AACxD,4BAAoB,KAAK;AAAA,MAC3B,GAAG,OAAO,kBAAkB,aAAY,qBAAoB,OAAM,qBAAoB,OAAO,CAAC,EAAC,yCAAY,eAAc,UAAU,yCAAY,cAAc,UAAU,EAAC,yCAAY,qBAFlL;AAAA;AAAA;AAAA;AAAA,aAEoM;AAAA,MACpM,mDAAC,YAAS,MAAM,eAAe,UAAU,WAAS;AAClD,uBAAe,KAAK;AAAA,MACtB,GAAG,OAAO,aAAa,aAAY,eAAc,OAAM,eAAc,UAAU,EAAC,yCAAY,qBAF1F;AAAA;AAAA;AAAA;AAAA,aAE4G;AAAA,MAC5G,mDAAC,kBAAO,WAAU,wBAAuB,QAAQ,MAAM,UAAU,EAAC,yCAAY,mBAAkB,4BAAhG;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAtCF;AAAA;AAAA;AAAA;AAAA,WAuCA,KAxCF;AAAA;AAAA;AAAA;AAAA,WAyCA;AAAA,OAhDG;AAAA;AAAA;AAAA;AAAA,SAiDL;AACJ;AACA,GAAG,gBAAgB,gCAAgC,OAAO,WAAY;AACpE,SAAO,CAAC,eAAe,aAAa;AACtC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,gBAAgB;AAEjC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react", "_c"]
}
