{
  "version": 3,
  "sources": ["../../../app/routes/_signedIn.$orgId._assetOverview.assetMap.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_signedIn.$orgId._assetOverview.assetMap.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_signedIn.$orgId._assetOverview.assetMap.tsx\");\n  import.meta.hot.lastModified = \"1706454925352.7222\";\n}\n// REMIX HMR END\n\nimport { useLoaderData, useNavigate, useOutletContext } from '@remix-run/react';\nimport { Map } from '~/components/ui/Map';\nimport { useState } from 'react';\nimport Button from '~/components/ui/Button';\nimport { secondaryText, subPageTitle } from '~/styles/typography';\nimport { chip, chipGrayDarkColor, chipGreenColor, chipRedColor } from '~/styles/genericStyles';\nexport async function action() {}\nexport const loader = async () => {\n  return {\n    mapApiKey: process.env.MAP_API_KEY\n  };\n};\nexport default function AssetMap() {\n  _s();\n  const {\n    assets,\n    imagePublicUrl\n  } = useOutletContext();\n  const loaderData = useLoaderData();\n  const [selectedAsset, setSelectedAsset] = useState();\n  const markerCoordinates = assets.map(asset => {\n    const lat = asset.properties.find(property => property.categoryProperty.label === 'Latitude')?.floatValue;\n    const lng = asset.properties.find(property => property.categoryProperty.label === 'Longitude')?.floatValue;\n    if (!lat || !lng) {\n      return undefined;\n    }\n    return {\n      lat,\n      lng,\n      onClick: () => {\n        setSelectedAsset(asset);\n      }\n    };\n  }).filter(coordinates => coordinates !== undefined);\n  const navigation = useNavigate();\n  const selectedAssetStatus = selectedAsset?.properties.find(property => property.categoryProperty.label === 'Status')?.stringValue ?? '';\n  const AssetPopUp = () => <>\n      <div className=\"flex w-full overflow-auto\">\n        {selectedAsset?.properties.find(property => property.categoryProperty.label === 'Photo Gallery')?.stringArrayValue.map((image, index) => {\n        return <div className=\"w-32  md:w-72\" key={index}>\n                <img className=\"h-auto max-h-32 w-auto max-w-xs md:max-h-60  md:max-w-sm\" src={imagePublicUrl + image} alt={''} />\n              </div>;\n      })}\n      </div>\n      <div className=\"p-6\">\n        <div className={`${subPageTitle} py-2`}>\n          {selectedAsset?.properties.find(property => property.categoryProperty.label === 'Asset Name')?.stringValue}\n        </div>\n        <div className=\"py-2\">\n          ID :{' '}\n          {selectedAsset?.properties.find(property => property.categoryProperty.label === 'Asset ID')?.stringValue}\n        </div>\n\n        <div className={`${selectedAssetStatus === 'active' ? chipGreenColor : selectedAssetStatus === 'inactive' ? chipGrayDarkColor : chipRedColor} ${chip}  text-xs`}>\n          {selectedAssetStatus.charAt(0).toUpperCase() + selectedAssetStatus.slice(1)}\n        </div>\n\n        <div className={`${secondaryText} py-2`}>\n          Updated :{' '}\n          {new Date(selectedAsset?.properties.find(property => property.categoryProperty.label === 'Modified Date')?.stringValue ?? '').toLocaleString('en-GB', {\n          hour: '2-digit',\n          minute: '2-digit',\n          day: '2-digit',\n          month: '2-digit',\n          year: '2-digit'\n        })}\n        </div>\n        <div className=\"py-2\">\n          {selectedAsset?.properties.find(property => property.categoryProperty.label === 'Description')?.stringValue}\n        </div>\n        <Button className=\"w-full py-2\" onClick={() => navigation('../' + (selectedAsset?.id ?? '-1') + '/viewAsset', {\n        relative: 'path'\n      })}>\n          See Full Asset Details\n        </Button>\n      </div>\n    </>;\n  return <>\n      <div className={`flex ${selectedAsset ? 'h-[calc(85vh-430px)]' : 'h-[calc(100vh-430px)]'} w-full flex-col md:h-[calc(100vh-350px)] md:flex-row`}>\n        <Map doCluster apiKey={loaderData.mapApiKey ?? ''} markersCoordinates={markerCoordinates}></Map>\n\n        {selectedAsset && <div className=\" w-96 max-md:hidden\">{<AssetPopUp />}</div>}\n      </div>\n\n      {selectedAsset && <div className=\" w-full  md:hidden \">{<AssetPopUp />}</div>}\n    </>;\n}\n_s(AssetMap, \"9AcwK8fHp7XCLY8NEJBB4c3wN0o=\", false, function () {\n  return [useOutletContext, useLoaderData, useNavigate];\n});\n_c = AssetMap;\nvar _c;\n$RefreshReg$(_c, \"AssetMap\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "_c", "_a", "_b"]
}
