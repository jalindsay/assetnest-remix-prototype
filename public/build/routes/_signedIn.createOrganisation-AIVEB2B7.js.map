{
  "version": 3,
  "sources": ["../../../app/routes/_signedIn.createOrganisation.tsx", "../../../app/components/ui/shadUi/ui/progress.tsx", "../../../node_modules/@radix-ui/react-progress/dist/packages/react/progress/src/index.ts", "../../../node_modules/@radix-ui/react-progress/dist/packages/react/progress/src/Progress.tsx", "../../../app/components/ui/ProgressBar.tsx", "../../../app/components/page/createOrg/CreateOrgPageBaseInfo.tsx", "../../../app/components/page/createOrg/CreateOrgPageLogo.tsx", "../../../app/components/page/createOrg/CreateOrgPageInviteUsers.tsx", "../../../app/components/ui/shadUi/ui/accordion.tsx", "../../../node_modules/@radix-ui/react-collapsible/dist/packages/react/collapsible/src/index.ts", "../../../node_modules/@radix-ui/react-collapsible/dist/packages/react/collapsible/src/Collapsible.tsx", "../../../node_modules/@radix-ui/react-accordion/dist/packages/react/accordion/src/index.ts", "../../../node_modules/@radix-ui/react-accordion/dist/packages/react/accordion/src/Accordion.tsx", "../../../app/components/ui/Accordion.tsx", "../../../app/components/page/createOrg/OrgRolesDialog.tsx", "../../../app/components/page/createOrg/CreateOrgPageOverview.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_signedIn.createOrganisation.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_signedIn.createOrganisation.tsx\");\n  import.meta.hot.lastModified = \"1706454925361.9922\";\n}\n// REMIX HMR END\n\nimport { redirect } from '@remix-run/node';\nimport { Form, Link, useActionData, useLoaderData } from '@remix-run/react';\nimport { useState } from 'react';\nimport Button from '~/components/ui/Button';\nimport { Card } from '~/components/ui/Card';\nimport { Dialog } from '~/components/ui/Dialog';\nimport { Icon } from '~/components/ui/Icon';\nimport { ProgressBar } from '~/components/ui/ProgressBar';\nimport { CreateOrgPageBaseInfo } from '~/components/page/createOrg/CreateOrgPageBaseInfo';\nimport { CreateOrgPageLogo } from '~/components/page/createOrg/CreateOrgPageLogo';\nimport { CreateOrgPageInviteUsers } from '~/components/page/createOrg/CreateOrgPageInviteUsers';\nimport { CreateOrgPageOverview } from '~/components/page/createOrg/CreateOrgPageOverview';\nimport { pageTitle, secondaryText, subPageTitle } from '~/styles/typography';\nimport { getSession } from '~/cookies';\nimport { createOrganisation } from '~/endpoints/organisation';\nimport { getAllRoles, getRole } from '~/endpoints/role';\nimport { createUserWithInvite } from '~/endpoints/user';\nexport async function action({\n  request\n}) {\n  const body = await request.formData();\n  const name = body.get('name');\n  const description = body.get('description');\n  const address = body.get('address');\n  const city = body.get('city');\n  const country = body.get('country');\n  const postcode = body.get('postcode');\n  const createdMemberEmails = body.getAll('createdMemberEmails[]');\n  const createdMemberRoleIds = body.getAll('createdMemberRoles[]');\n  const icon = body.get('icon');\n  const session = await getSession(request.headers.get('Cookie'));\n  const userId = session.get('userId');\n  const newOrg = await createOrganisation({\n    name,\n    description,\n    address,\n    city,\n    country,\n    postcode,\n    ownerUserId: userId ?? 0 - 1,\n    icon\n  });\n\n  //create memberships here\n  await Promise.all(createdMemberEmails.map(async (emails, index) => {\n    return await Promise.all(emails.split('\u00A3').map(async email => {\n      const role = await getRole(parseInt(createdMemberRoleIds[index]));\n      return createUserWithInvite({\n        email,\n        orgId: newOrg.id ?? -1,\n        role: role?.roleName ?? 'No role'\n      });\n    }));\n  }));\n  return redirect(`/organisationList`);\n}\nexport const loader = async () => {\n  const roles = await getAllRoles();\n  return {\n    roles: roles.sort((roleA, roleB) => roleA.roleName > roleB.roleName ? 1 : -1)\n  };\n};\nexport default function CreateOrg() {\n  _s();\n  const [page, setPage] = useState(0);\n  const loaderData = useLoaderData();\n  const actionData = useActionData();\n  const [showCloseModal, setShowCloseModal] = useState(false);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [postcode, setPostcode] = useState('');\n  const [country, setCountry] = useState({\n    name: 'United Kingdom',\n    code: 'GB'\n  });\n  const [iconPathLocal, setIconPathLocal] = useState('');\n  const [emailInvites, setEmailInvites] = useState([{\n    roleId: loaderData.roles[0].id.toString(),\n    emails: []\n  }]);\n  const updateOrgIcon = async event => {\n    if (event === '') {\n      setIconPathLocal('');\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = async e => {\n      setIconPathLocal(e.target.result); //image path on local machine\n    };\n    reader.readAsDataURL(event.target.files[0]);\n  };\n  const canGoNextPage = () => {\n    if (page === 0) {\n      return name.length !== 0;\n    } else if (page === 1) {\n      return true;\n    } else if (page === 2) {\n      return true;\n    } else if (page === 3) {\n      return true;\n    }\n  };\n  const progress = (page + 1) * 25;\n  return <div className=\"self-start py-4 md:py-8\">\n      <Card innerClassName=\"p-4 md:p-8\">\n        {/* !TODO: Refactor this for a11y */}\n        {/* eslint-disable-next-line jsx-a11y/anchor-has-content,jsx-a11y/anchor-is-valid */}\n        <a id=\"top\" />\n        <div className=\"pt-1\">\n          <ProgressBar progress={progress > 100 ? 100 : progress} />\n        </div>\n        <div className=\"flex h-8 w-full items-center justify-end py-2 text-end\">\n          {(page === 1 || page === 2) && <div className=\"w-fit text-primary hover:cursor-pointer hover:underline\" onClick={() => setPage(page => page + 1)}>\n              Skip\n            </div>}\n        </div>\n        <div className=\"flex w-full flex-col p-2 md:w-[45rem] lg:w-[50rem] \">\n          <h1 className={`${pageTitle} py-4`}>Create a new organisation</h1>\n\n          <Form method=\"post\" encType=\"multipart/form-data\">\n            <div className={page === 0 ? '' : ' hidden'}>\n              <CreateOrgPageBaseInfo name={name} setName={setName} nameError={actionData?.name} setDescription={setDescription} description={description} descriptionError={actionData?.description} setAddress={setAddress} address={address} addressError={actionData?.address} setCity={setCity} city={city} cityError={actionData?.city} setCountry={setCountry} country={country} setPostcode={setPostcode} postcode={postcode} postcodeError={actionData?.postcode} />\n            </div>\n\n            <div className={page === 1 ? '' : ' hidden'}>\n              <CreateOrgPageLogo updateOrgIconImage={updateOrgIcon} iconPathLocal={iconPathLocal} />\n            </div>\n\n            <div className={page === 2 ? '' : ' hidden'}>\n              <CreateOrgPageInviteUsers possibleRoles={loaderData.roles.map(role => {\n              return {\n                value: role.id.toString(),\n                valueLabel: role.roleName\n              };\n            })} emailInvites={emailInvites} setMemberEmails={(value, index) => {\n              setEmailInvites(oldValue => {\n                const tempValue = [...oldValue];\n                tempValue[index].emails = value;\n                return [...tempValue];\n              });\n            }} setMembersRoles={(value, index) => {\n              setEmailInvites(oldValue => {\n                const tempValue = [...oldValue];\n                tempValue[index].roleId = value;\n                return [...tempValue];\n              });\n            }} addNewEmailRole={newEmailInvites => {\n              setEmailInvites(newEmailInvites);\n            }} />\n            </div>\n            <div className={page === 3 ? '' : ' hidden'}>\n              <CreateOrgPageOverview name={name} description={description} goPage={number => setPage(number)} imagePathLocal={iconPathLocal} emails={emailInvites.reduce((currentTotal, emailInvite) => {\n              return [...currentTotal, ...emailInvite.emails];\n            }, [])} />\n            </div>\n            <div className=\" flex w-full p-1 pt-12\">\n              <div className=\"p-1 pl-10\">\n                {page === 0 ? <>\n                    <Button onClick={() => setShowCloseModal(true)} variant=\"outline\" className=\"w-full\">\n                      Cancel\n                    </Button>\n                    <Dialog open={showCloseModal} onClose={() => {\n                  setShowCloseModal(false);\n                }}>\n                      <div className=\"flex flex-col items-center justify-center text-center\">\n                        <Icon className=\"h-11 w-11\" icon=\"warning\" />\n                        <div className={`${subPageTitle} p-2`}>\n                          Are you sure you want to cancel?\n                        </div>\n                        <div className={`${secondaryText} py-2`}>\n                          Any content created will be deleted.\n                        </div>\n                        <div className=\"flex py-5\">\n                          <div>\n                            <Link to=\"/organisationList\">\n                              <Button variant=\"destructive\">Yes, delete</Button>\n                            </Link>\n                          </div>\n                          <div>\n                            <Button variant=\"ghost\" onClick={() => setShowCloseModal(false)}>\n                              No, keep editing\n                            </Button>\n                          </div>\n                        </div>\n                      </div>\n                    </Dialog>\n                  </> : <Button variant=\"outline\" className=\"w-full\" onClick={() => {\n                document.getElementById('top')?.scrollIntoView();\n                setPage(page => page - 1);\n              }} submit={false}>\n                    Back\n                  </Button>}\n              </div>\n              <div className=\" ml-auto p-1 pr-10\">\n                <Button className={`w-full ${page !== 3 && 'hidden'}`} disabled={!canGoNextPage()} submit>\n                  Finish\n                </Button>\n\n                <Button className={`w-full ${page === 3 && 'hidden'}`} onClick={() => {\n                document.getElementById('top')?.scrollIntoView();\n                setPage(page => page === 3 ? page : page + 1);\n              }} disabled={!canGoNextPage()}>\n                  Next\n                </Button>\n              </div>\n            </div>\n          </Form>\n        </div>\n      </Card>\n    </div>;\n}\n_s(CreateOrg, \"an7LMd52HdPaVkWXsf4DnehK7Ys=\", false, function () {\n  return [useLoaderData, useActionData];\n});\n_c = CreateOrg;\nvar _c;\n$RefreshReg$(_c, \"CreateOrg\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ui/shadUi/ui/progress.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ui/shadUi/ui/progress.tsx\");\n  import.meta.hot.lastModified = \"1705519263367.2095\";\n}\n// REMIX HMR END\n\nimport * as React from 'react';\nimport * as ProgressPrimitive from '@radix-ui/react-progress';\nimport { cn } from '../utils';\nconst ProgressShad = React.forwardRef(_c = ({\n  className,\n  value,\n  ...props\n}, ref) => <ProgressPrimitive.Root ref={ref} className={cn('relative h-4 w-full overflow-hidden rounded-full bg-secondary', className)} {...props}>\n    <ProgressPrimitive.Indicator className=\"h-full w-full flex-1 bg-primary transition-all\" style={{\n    transform: `translateX(-${100 - (value || 0)}%)`\n  }} />\n  </ProgressPrimitive.Root>);\n_c2 = ProgressShad;\nProgressShad.displayName = ProgressPrimitive.Root.displayName;\nexport { ProgressShad };\nvar _c, _c2;\n$RefreshReg$(_c, \"ProgressShad$React.forwardRef\");\n$RefreshReg$(_c2, \"ProgressShad\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "export {\n  createProgressScope,\n  //\n  Progress,\n  ProgressIndicator,\n  //\n  Root,\n  Indicator,\n} from './Progress';\nexport type { ProgressProps, ProgressIndicatorProps } from './Progress';\n", "import * as React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Progress\n * -----------------------------------------------------------------------------------------------*/\n\nconst PROGRESS_NAME = 'Progress';\nconst DEFAULT_MAX = 100;\n\ntype ScopedProps<P> = P & { __scopeProgress?: Scope };\nconst [createProgressContext, createProgressScope] = createContextScope(PROGRESS_NAME);\n\ntype ProgressState = 'indeterminate' | 'complete' | 'loading';\ntype ProgressContextValue = { value: number | null; max: number };\nconst [ProgressProvider, useProgressContext] =\n  createProgressContext<ProgressContextValue>(PROGRESS_NAME);\n\ntype ProgressElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface ProgressProps extends PrimitiveDivProps {\n  value?: number | null | undefined;\n  max?: number;\n  getValueLabel?(value: number, max: number): string;\n}\n\nconst Progress = React.forwardRef<ProgressElement, ProgressProps>(\n  (props: ScopedProps<ProgressProps>, forwardedRef) => {\n    const {\n      __scopeProgress,\n      value: valueProp,\n      max: maxProp,\n      getValueLabel = defaultGetValueLabel,\n      ...progressProps\n    } = props;\n\n    const max = isValidMaxNumber(maxProp) ? maxProp : DEFAULT_MAX;\n    const value = isValidValueNumber(valueProp, max) ? valueProp : null;\n    const valueLabel = isNumber(value) ? getValueLabel(value, max) : undefined;\n\n    return (\n      <ProgressProvider scope={__scopeProgress} value={value} max={max}>\n        <Primitive.div\n          aria-valuemax={max}\n          aria-valuemin={0}\n          aria-valuenow={isNumber(value) ? value : undefined}\n          aria-valuetext={valueLabel}\n          role=\"progressbar\"\n          data-state={getProgressState(value, max)}\n          data-value={value ?? undefined}\n          data-max={max}\n          {...progressProps}\n          ref={forwardedRef}\n        />\n      </ProgressProvider>\n    );\n  }\n);\n\nProgress.displayName = PROGRESS_NAME;\n\nProgress.propTypes = {\n  max(props, propName, componentName) {\n    const propValue = props[propName];\n    const strVal = String(propValue);\n    if (propValue && !isValidMaxNumber(propValue)) {\n      return new Error(getInvalidMaxError(strVal, componentName));\n    }\n    return null;\n  },\n  value(props, propName, componentName) {\n    const valueProp = props[propName];\n    const strVal = String(valueProp);\n    const max = isValidMaxNumber(props.max) ? props.max : DEFAULT_MAX;\n    if (valueProp != null && !isValidValueNumber(valueProp, max)) {\n      return new Error(getInvalidValueError(strVal, componentName));\n    }\n    return null;\n  },\n};\n\n/* -------------------------------------------------------------------------------------------------\n * ProgressIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'ProgressIndicator';\n\ntype ProgressIndicatorElement = React.ElementRef<typeof Primitive.div>;\ninterface ProgressIndicatorProps extends PrimitiveDivProps {}\n\nconst ProgressIndicator = React.forwardRef<ProgressIndicatorElement, ProgressIndicatorProps>(\n  (props: ScopedProps<ProgressIndicatorProps>, forwardedRef) => {\n    const { __scopeProgress, ...indicatorProps } = props;\n    const context = useProgressContext(INDICATOR_NAME, __scopeProgress);\n    return (\n      <Primitive.div\n        data-state={getProgressState(context.value, context.max)}\n        data-value={context.value ?? undefined}\n        data-max={context.max}\n        {...indicatorProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nProgressIndicator.displayName = INDICATOR_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction defaultGetValueLabel(value: number, max: number) {\n  return `${Math.round((value / max) * 100)}%`;\n}\n\nfunction getProgressState(value: number | undefined | null, maxValue: number): ProgressState {\n  return value == null ? 'indeterminate' : value === maxValue ? 'complete' : 'loading';\n}\n\nfunction isNumber(value: any): value is number {\n  return typeof value === 'number';\n}\n\nfunction isValidMaxNumber(max: any): max is number {\n  // prettier-ignore\n  return (\n    isNumber(max) &&\n    !isNaN(max) &&\n    max > 0\n  );\n}\n\nfunction isValidValueNumber(value: any, max: number): value is number {\n  // prettier-ignore\n  return (\n    isNumber(value) &&\n    !isNaN(value) &&\n    value <= max &&\n    value >= 0\n  );\n}\n\n// Split this out for clearer readability of the error message.\nfunction getInvalidMaxError(propValue: string, componentName: string) {\n  return `Invalid prop \\`max\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. Only numbers greater than 0 are valid max values. Defaulting to \\`${DEFAULT_MAX}\\`.`;\n}\n\nfunction getInvalidValueError(propValue: string, componentName: string) {\n  return `Invalid prop \\`value\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. The \\`value\\` prop must be:\n  - a positive number\n  - less than the value passed to \\`max\\` (or ${DEFAULT_MAX} if no \\`max\\` prop is set)\n  - \\`null\\` if the progress is indeterminate.\n\nDefaulting to \\`null\\`.`;\n}\n\nconst Root = Progress;\nconst Indicator = ProgressIndicator;\n\nexport {\n  createProgressScope,\n  //\n  Progress,\n  ProgressIndicator,\n  //\n  Root,\n  Indicator,\n};\nexport type { ProgressProps, ProgressIndicatorProps };\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ui/ProgressBar.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ui/ProgressBar.tsx\");\n  import.meta.hot.lastModified = \"1705519263364.6475\";\n}\n// REMIX HMR END\n\nimport { ProgressShad } from '~/components/ui/shadUi/ui/progress';\nexport const ProgressBar = ({\n  progress\n}) => {\n  return <ProgressShad value={progress} />;\n};\n_c = ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/page/createOrg/CreateOrgPageBaseInfo.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/page/createOrg/CreateOrgPageBaseInfo.tsx\");\n  import.meta.hot.lastModified = \"1706454925339.3118\";\n}\n// REMIX HMR END\n\nimport { SelectInput } from '~/components/ui/SelectInput';\nimport { TextArea } from '~/components/ui/TextArea';\nimport { TextInput } from '~/components/ui/TextInput';\nimport { subPageTitle } from '~/styles/typography';\nimport { allCountries } from '~/utils/arrayOfAllCountries';\nexport const CreateOrgPageBaseInfo = ({\n  name,\n  setName,\n  nameError,\n  setDescription,\n  description,\n  descriptionError,\n  setAddress,\n  address,\n  addressError,\n  setCity,\n  city,\n  cityError,\n  setCountry,\n  country,\n  setPostcode,\n  postcode,\n  postcodeError\n}) => {\n  const listOfCountries = allCountries.map(country => {\n    return {\n      value: country.code,\n      valueLabel: country.name\n    };\n  });\n  return <>\n      <div>\n        <div className=\"py-2 \">\n          <TextInput name={'name'} onChange={value => {\n          if (value.length < 250) {\n            setName(value);\n          }\n        }} value={name} placeholder=\"Name\" label=\"Give your organisation a name\" error={!!nameError} helpText={nameError ?? ''} noPadding />\n        </div>\n        <div className=\"py-2\">\n          <TextArea name={'description'} onChange={value => {\n          if (value.length < 250) {\n            setDescription(value);\n          }\n        }} value={description} placeholder=\"Description\" label=\"Add a short description about your organisation\" error={!!descriptionError} helpText={descriptionError ?? ''} noPadding />\n        </div>\n      </div>\n      <h2 className={`${subPageTitle} py-2`}>Location</h2>\n      <div className=\"py-2\">\n        <TextArea name={'address'} onChange={value => {\n        if (value.length < 250) {\n          setAddress(value);\n        }\n      }} value={address} placeholder=\"Street Address\" label=\"Street Address\" error={!!addressError} helpText={addressError ?? ''} noPadding />\n      </div>\n      <div className=\"py-2\">\n        <TextInput name={'city'} onChange={value => {\n        if (value.length < 250) {\n          setCity(value);\n        }\n      }} value={city} placeholder=\"City\" label=\"City\" error={!!cityError} helpText={cityError ?? ''} noPadding />\n      </div>\n      {/* set up select input label stuff */}\n      <div className=\"py-2\">\n        <SelectInput name=\"country\" label=\"Country\" valueCurrent={country.code} onChange={newValue => {\n        setCountry(allCountries.find(country => country.code === newValue) ?? {\n          name: 'United Kingdom',\n          code: 'GB'\n        });\n      }} possibleValues={listOfCountries} noPadding />\n      </div>\n      <div className=\"w-32 py-2\">\n        <TextInput name={'postcode'} onChange={value => {\n        if (value.length < 250) {\n          setPostcode(value);\n        }\n      }} value={postcode} placeholder=\"Postcode\" label=\"Postcode\" error={!!postcodeError} helpText={postcodeError ?? ''} noPadding />\n      </div>\n    </>;\n};\n_c = CreateOrgPageBaseInfo;\nvar _c;\n$RefreshReg$(_c, \"CreateOrgPageBaseInfo\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/page/createOrg/CreateOrgPageLogo.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/page/createOrg/CreateOrgPageLogo.tsx\");\n  import.meta.hot.lastModified = \"1706454925339.8757\";\n}\n// REMIX HMR END\n\nimport Button from '~/components/ui/Button';\nimport { subPageTitle, textRegular } from '~/styles/typography';\nexport const CreateOrgPageLogo = ({\n  updateOrgIconImage,\n  iconPathLocal: imageIconPathLocal\n}) => {\n  return <div className=\"w-full\">\n      <h2 className={`${subPageTitle}`}>Icon</h2>\n      <div>\n        Adding an icon will help to identify your organisation. This is\n        especially useful if you have more than one.\n      </div>\n      <div className={`${textRegular} py-4`}>\n        Some tips on choosing your icon:\n        <ul className=\" list-disc pl-6\">\n          <li>Use a graphical logo or image rather than text.</li>\n          <li>Upload an image that is 320 px square or larger.</li>\n          <li>\n            Use the tools to resize and crop your logo to fit.(Feature to be\n            added in future)\n          </li>\n        </ul>\n      </div>\n      <div className=\" py-2 text-sm font-bold\">Upload an icon</div>\n      <div className=\" py-4 text-xs\">File types: jpeg, png</div>\n      <div className=\"relative pb-4 hover:cursor-pointer hover:underline\">\n        <input type=\"file\" name=\"icon\" accept=\"image/png, image/jpeg\" onChange={updateOrgIconImage} className=\"absolute  opacity-0\" />\n        <div className=\"text-primary\">Choose file</div>\n      </div>\n      {imageIconPathLocal && <>\n          <img className=\"h-52 w-52 object-cover \" src={imageIconPathLocal} alt={''} />\n          <div className=\"p-1 py-2\">\n            <Button variant=\"outline\" onClick={() => updateOrgIconImage('')}>\n              Remove Icon\n            </Button>\n          </div>\n        </>}\n    </div>;\n};\n_c = CreateOrgPageLogo;\nvar _c;\n$RefreshReg$(_c, \"CreateOrgPageLogo\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/page/createOrg/CreateOrgPageInviteUsers.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/page/createOrg/CreateOrgPageInviteUsers.tsx\");\n  import.meta.hot.lastModified = \"1706454925339.639\";\n}\n// REMIX HMR END\n\nimport { useState } from 'react';\nimport Button from '~/components/ui/Button';\nimport { Icon } from '~/components/ui/Icon';\nimport { ReactMultiEmail } from '~/components/ui/ReactMultiEmail';\nimport { SelectInput } from '~/components/ui/SelectInput';\nimport { LabelShad } from '~/components/ui/shadUi/ui/label';\nimport { subPageTitle, textRegular } from '~/styles/typography';\nimport { OrgRolesDialog } from './OrgRolesDialog';\nexport const CreateOrgPageInviteUsers = ({\n  setMemberEmails,\n  setMembersRoles,\n  emailInvites,\n  possibleRoles,\n  addNewEmailRole\n}) => {\n  _s();\n  const [openHelpDialog, setOpenHelpDialog] = useState(false);\n  return <>\n      <OrgRolesDialog openDialog={openHelpDialog} setOpenDialog={setOpenHelpDialog} />\n      <h2 className={`${subPageTitle} `}>Team Members</h2>\n      <div className={`${textRegular} pb-2`}>\n        Share the workload by adding team members to your organisation and\n        assigning them a role.\n      </div>\n      <div className={`${textRegular} `}>\n        They will create an account linked to the email address given below.\n      </div>\n      <Button variant=\"ghost\" noPadding onClick={() => setOpenHelpDialog(true)}>\n        <div className=\" flex items-center underline hover:font-semibold\">\n          <Icon className=\"p-1 \" icon=\"help\" />\n          <div>User Roles Explained</div>\n        </div>\n      </Button>\n      {emailInvites.map((emailInvite, index) => <div className=\"pb-6\" key={index}>\n          <div className=\"w-52  py-2\">\n            <SelectInput name=\"createdMemberRoles[]\" label=\"Role\" valueCurrent={emailInvite.roleId} onChange={newValue => setMembersRoles(newValue, index)} possibleValues={possibleRoles} noPadding />\n          </div>\n          <LabelShad className={'text-s pb-1 pl-1 text-left font-semibold'}>\n            Add team members by email\n          </LabelShad>\n          <input type=\"hidden\" name=\"createdMemberEmails[]\" value={emailInvite.emails.join('\u00A3')} />\n          <ReactMultiEmail className={'tap-highlight-color-transparent leading-14 align-content-start relative flex  flex-1 flex-wrap items-center rounded-md border border-input bg-white px-2 py-2  text-left text-black shadow outline-none transition duration-100 ease-in-out'} placeholder=\"Enter emails to invite\" emailsInput={emailInvite.emails} onChange={_emails => {\n        setMemberEmails(_emails, index);\n      }} getLabel={(email, index, removeEmail) => {\n        return <div className={'@apply m-1 flex max-w-full items-center justify-start rounded-md border-transparent bg-gray-200 bg-none p-1.5 align-baseline text-sm font-semibold leading-4 text-gray-600 transition duration-100 ease-in-out'} key={index}>\n                  <div data-tag-item=\"\" className={'@apply max-w-full overflow-hidden'}>\n                    {email}\n                  </div>\n                  <span data-tag-handle=\"\" className={'ml-2 cursor-pointer'} onClick={() => removeEmail(index)}>\n                    \u00D7\n                  </span>\n                </div>;\n      }} />\n        </div>)}\n      <div className=\"py-4\">\n        <Button onClick={() => {\n        const newEmailInvites = [...emailInvites];\n        newEmailInvites.push({\n          roleId: possibleRoles[0].value,\n          emails: []\n        });\n        addNewEmailRole(newEmailInvites);\n      }} className=\"w-full\" variant=\"outline\">\n          Add More\n        </Button>\n      </div>\n    </>;\n};\n_s(CreateOrgPageInviteUsers, \"Siwl1iZHL7YA93R5yvi3xLlGbiY=\");\n_c = CreateOrgPageInviteUsers;\nvar _c;\n$RefreshReg$(_c, \"CreateOrgPageInviteUsers\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ui/shadUi/ui/accordion.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ui/shadUi/ui/accordion.tsx\");\n  import.meta.hot.lastModified = \"1705519263365.7402\";\n}\n// REMIX HMR END\n\nimport * as React from 'react';\nimport * as AccordionPrimitive from '@radix-ui/react-accordion';\nimport { ChevronDown } from 'lucide-react';\nimport { cn } from '~/components/ui/shadUi/utils';\nconst AccordionShad = AccordionPrimitive.Root;\nconst AccordionItemShad = React.forwardRef(_c = ({\n  className,\n  ...props\n}, ref) => <AccordionPrimitive.Item ref={ref} className={cn('border-b', className)} {...props} />);\n_c2 = AccordionItemShad;\nAccordionItemShad.displayName = 'AccordionItem';\nconst AccordionTriggerShad = React.forwardRef(_c3 = ({\n  className,\n  children,\n  ...props\n}, ref) => <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger ref={ref} className={cn('flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180', className)} {...props}>\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>);\n_c4 = AccordionTriggerShad;\nAccordionTriggerShad.displayName = AccordionPrimitive.Trigger.displayName;\nconst AccordionContentShad = React.forwardRef(_c5 = ({\n  className,\n  children,\n  ...props\n}, ref) => <AccordionPrimitive.Content ref={ref} className={cn('overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down', className)} {...props}>\n    <div className=\"pb-4 pt-0\">{children}</div>\n  </AccordionPrimitive.Content>);\n_c6 = AccordionContentShad;\nAccordionContentShad.displayName = AccordionPrimitive.Content.displayName;\nexport { AccordionShad, AccordionItemShad, AccordionTriggerShad, AccordionContentShad };\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"AccordionItemShad$React.forwardRef\");\n$RefreshReg$(_c2, \"AccordionItemShad\");\n$RefreshReg$(_c3, \"AccordionTriggerShad$React.forwardRef\");\n$RefreshReg$(_c4, \"AccordionTriggerShad\");\n$RefreshReg$(_c5, \"AccordionContentShad$React.forwardRef\");\n$RefreshReg$(_c6, \"AccordionContentShad\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "export {\n  createCollapsibleScope,\n  //\n  Collapsible,\n  CollapsibleTrigger,\n  CollapsibleContent,\n  //\n  Root,\n  Trigger,\n  Content,\n} from './Collapsible';\nexport type {\n  CollapsibleProps,\n  CollapsibleTriggerProps,\n  CollapsibleContentProps,\n} from './Collapsible';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Presence } from '@radix-ui/react-presence';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Collapsible\n * -----------------------------------------------------------------------------------------------*/\n\nconst COLLAPSIBLE_NAME = 'Collapsible';\n\ntype ScopedProps<P> = P & { __scopeCollapsible?: Scope };\nconst [createCollapsibleContext, createCollapsibleScope] = createContextScope(COLLAPSIBLE_NAME);\n\ntype CollapsibleContextValue = {\n  contentId: string;\n  disabled?: boolean;\n  open: boolean;\n  onOpenToggle(): void;\n};\n\nconst [CollapsibleProvider, useCollapsibleContext] =\n  createCollapsibleContext<CollapsibleContextValue>(COLLAPSIBLE_NAME);\n\ntype CollapsibleElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface CollapsibleProps extends PrimitiveDivProps {\n  defaultOpen?: boolean;\n  open?: boolean;\n  disabled?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst Collapsible = React.forwardRef<CollapsibleElement, CollapsibleProps>(\n  (props: ScopedProps<CollapsibleProps>, forwardedRef) => {\n    const {\n      __scopeCollapsible,\n      open: openProp,\n      defaultOpen,\n      disabled,\n      onOpenChange,\n      ...collapsibleProps\n    } = props;\n\n    const [open = false, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen,\n      onChange: onOpenChange,\n    });\n\n    return (\n      <CollapsibleProvider\n        scope={__scopeCollapsible}\n        disabled={disabled}\n        contentId={useId()}\n        open={open}\n        onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      >\n        <Primitive.div\n          data-state={getState(open)}\n          data-disabled={disabled ? '' : undefined}\n          {...collapsibleProps}\n          ref={forwardedRef}\n        />\n      </CollapsibleProvider>\n    );\n  }\n);\n\nCollapsible.displayName = COLLAPSIBLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CollapsibleTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'CollapsibleTrigger';\n\ntype CollapsibleTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface CollapsibleTriggerProps extends PrimitiveButtonProps {}\n\nconst CollapsibleTrigger = React.forwardRef<CollapsibleTriggerElement, CollapsibleTriggerProps>(\n  (props: ScopedProps<CollapsibleTriggerProps>, forwardedRef) => {\n    const { __scopeCollapsible, ...triggerProps } = props;\n    const context = useCollapsibleContext(TRIGGER_NAME, __scopeCollapsible);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-controls={context.contentId}\n        aria-expanded={context.open || false}\n        data-state={getState(context.open)}\n        data-disabled={context.disabled ? '' : undefined}\n        disabled={context.disabled}\n        {...triggerProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nCollapsibleTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CollapsibleContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'CollapsibleContent';\n\ntype CollapsibleContentElement = CollapsibleContentImplElement;\ninterface CollapsibleContentProps extends Omit<CollapsibleContentImplProps, 'present'> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst CollapsibleContent = React.forwardRef<CollapsibleContentElement, CollapsibleContentProps>(\n  (props: ScopedProps<CollapsibleContentProps>, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = useCollapsibleContext(CONTENT_NAME, props.__scopeCollapsible);\n    return (\n      <Presence present={forceMount || context.open}>\n        {({ present }) => (\n          <CollapsibleContentImpl {...contentProps} ref={forwardedRef} present={present} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nCollapsibleContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype CollapsibleContentImplElement = React.ElementRef<typeof Primitive.div>;\ninterface CollapsibleContentImplProps extends PrimitiveDivProps {\n  present: boolean;\n}\n\nconst CollapsibleContentImpl = React.forwardRef<\n  CollapsibleContentImplElement,\n  CollapsibleContentImplProps\n>((props: ScopedProps<CollapsibleContentImplProps>, forwardedRef) => {\n  const { __scopeCollapsible, present, children, ...contentProps } = props;\n  const context = useCollapsibleContext(CONTENT_NAME, __scopeCollapsible);\n  const [isPresent, setIsPresent] = React.useState(present);\n  const ref = React.useRef<CollapsibleContentImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const heightRef = React.useRef<number | undefined>(0);\n  const height = heightRef.current;\n  const widthRef = React.useRef<number | undefined>(0);\n  const width = widthRef.current;\n  // when opening we want it to immediately open to retrieve dimensions\n  // when closing we delay `present` to retrieve dimensions before closing\n  const isOpen = context.open || isPresent;\n  const isMountAnimationPreventedRef = React.useRef(isOpen);\n  const originalStylesRef = React.useRef<Record<string, string>>();\n\n  React.useEffect(() => {\n    const rAF = requestAnimationFrame(() => (isMountAnimationPreventedRef.current = false));\n    return () => cancelAnimationFrame(rAF);\n  }, []);\n\n  useLayoutEffect(() => {\n    const node = ref.current;\n    if (node) {\n      originalStylesRef.current = originalStylesRef.current || {\n        transitionDuration: node.style.transitionDuration,\n        animationName: node.style.animationName,\n      };\n      // block any animations/transitions so the element renders at its full dimensions\n      node.style.transitionDuration = '0s';\n      node.style.animationName = 'none';\n\n      // get width and height from full dimensions\n      const rect = node.getBoundingClientRect();\n      heightRef.current = rect.height;\n      widthRef.current = rect.width;\n\n      // kick off any animations/transitions that were originally set up if it isn't the initial mount\n      if (!isMountAnimationPreventedRef.current) {\n        node.style.transitionDuration = originalStylesRef.current.transitionDuration;\n        node.style.animationName = originalStylesRef.current.animationName;\n      }\n\n      setIsPresent(present);\n    }\n    /**\n     * depends on `context.open` because it will change to `false`\n     * when a close is triggered but `present` will be `false` on\n     * animation end (so when close finishes). This allows us to\n     * retrieve the dimensions *before* closing.\n     */\n  }, [context.open, present]);\n\n  return (\n    <Primitive.div\n      data-state={getState(context.open)}\n      data-disabled={context.disabled ? '' : undefined}\n      id={context.contentId}\n      hidden={!isOpen}\n      {...contentProps}\n      ref={composedRefs}\n      style={{\n        [`--radix-collapsible-content-height` as any]: height ? `${height}px` : undefined,\n        [`--radix-collapsible-content-width` as any]: width ? `${width}px` : undefined,\n        ...props.style,\n      }}\n    >\n      {isOpen && children}\n    </Primitive.div>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open?: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Collapsible;\nconst Trigger = CollapsibleTrigger;\nconst Content = CollapsibleContent;\n\nexport {\n  createCollapsibleScope,\n  //\n  Collapsible,\n  CollapsibleTrigger,\n  CollapsibleContent,\n  //\n  Root,\n  Trigger,\n  Content,\n};\nexport type { CollapsibleProps, CollapsibleTriggerProps, CollapsibleContentProps };\n", "export {\n  createAccordionScope,\n  //\n  Accordion,\n  AccordionItem,\n  AccordionHeader,\n  AccordionTrigger,\n  AccordionContent,\n  //\n  Root,\n  Item,\n  Header,\n  Trigger,\n  Content,\n} from './Accordion';\nexport type {\n  AccordionSingleProps,\n  AccordionMultipleProps,\n  AccordionItemProps,\n  AccordionHeaderProps,\n  AccordionTriggerProps,\n  AccordionContentProps,\n} from './Accordion';\n", "import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as CollapsiblePrimitive from '@radix-ui/react-collapsible';\nimport { createCollapsibleScope } from '@radix-ui/react-collapsible';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\n\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * Accordion\n * -----------------------------------------------------------------------------------------------*/\n\nconst ACCORDION_NAME = 'Accordion';\nconst ACCORDION_KEYS = ['Home', 'End', 'ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight'];\n\nconst [Collection, useCollection, createCollectionScope] =\n  createCollection<AccordionTriggerElement>(ACCORDION_NAME);\n\ntype ScopedProps<P> = P & { __scopeAccordion?: Scope };\nconst [createAccordionContext, createAccordionScope] = createContextScope(ACCORDION_NAME, [\n  createCollectionScope,\n  createCollapsibleScope,\n]);\nconst useCollapsibleScope = createCollapsibleScope();\n\ntype AccordionElement = AccordionImplMultipleElement | AccordionImplSingleElement;\ninterface AccordionSingleProps extends AccordionImplSingleProps {\n  type: 'single';\n}\ninterface AccordionMultipleProps extends AccordionImplMultipleProps {\n  type: 'multiple';\n}\n\nconst Accordion = React.forwardRef<AccordionElement, AccordionSingleProps | AccordionMultipleProps>(\n  (props: ScopedProps<AccordionSingleProps | AccordionMultipleProps>, forwardedRef) => {\n    const { type, ...accordionProps } = props;\n    const singleProps = accordionProps as AccordionImplSingleProps;\n    const multipleProps = accordionProps as AccordionImplMultipleProps;\n    return (\n      <Collection.Provider scope={props.__scopeAccordion}>\n        {type === 'multiple' ? (\n          <AccordionImplMultiple {...multipleProps} ref={forwardedRef} />\n        ) : (\n          <AccordionImplSingle {...singleProps} ref={forwardedRef} />\n        )}\n      </Collection.Provider>\n    );\n  }\n);\n\nAccordion.displayName = ACCORDION_NAME;\n\nAccordion.propTypes = {\n  type(props) {\n    const value = props.value || props.defaultValue;\n    if (props.type && !['single', 'multiple'].includes(props.type)) {\n      return new Error(\n        'Invalid prop `type` supplied to `Accordion`. Expected one of `single | multiple`.'\n      );\n    }\n    if (props.type === 'multiple' && typeof value === 'string') {\n      return new Error(\n        'Invalid prop `type` supplied to `Accordion`. Expected `single` when `defaultValue` or `value` is type `string`.'\n      );\n    }\n    if (props.type === 'single' && Array.isArray(value)) {\n      return new Error(\n        'Invalid prop `type` supplied to `Accordion`. Expected `multiple` when `defaultValue` or `value` is type `string[]`.'\n      );\n    }\n    return null;\n  },\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype AccordionValueContextValue = {\n  value: string[];\n  onItemOpen(value: string): void;\n  onItemClose(value: string): void;\n};\n\nconst [AccordionValueProvider, useAccordionValueContext] =\n  createAccordionContext<AccordionValueContextValue>(ACCORDION_NAME);\n\nconst [AccordionCollapsibleProvider, useAccordionCollapsibleContext] = createAccordionContext(\n  ACCORDION_NAME,\n  { collapsible: false }\n);\n\ntype AccordionImplSingleElement = AccordionImplElement;\ninterface AccordionImplSingleProps extends AccordionImplProps {\n  /**\n   * The controlled stateful value of the accordion item whose content is expanded.\n   */\n  value?: string;\n  /**\n   * The value of the item whose content is expanded when the accordion is initially rendered. Use\n   * `defaultValue` if you do not need to control the state of an accordion.\n   */\n  defaultValue?: string;\n  /**\n   * The callback that fires when the state of the accordion changes.\n   */\n  onValueChange?(value: string): void;\n  /**\n   * Whether an accordion item can be collapsed after it has been opened.\n   * @default false\n   */\n  collapsible?: boolean;\n}\n\nconst AccordionImplSingle = React.forwardRef<AccordionImplSingleElement, AccordionImplSingleProps>(\n  (props: ScopedProps<AccordionImplSingleProps>, forwardedRef) => {\n    const {\n      value: valueProp,\n      defaultValue,\n      onValueChange = () => {},\n      collapsible = false,\n      ...accordionSingleProps\n    } = props;\n\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      defaultProp: defaultValue,\n      onChange: onValueChange,\n    });\n\n    return (\n      <AccordionValueProvider\n        scope={props.__scopeAccordion}\n        value={value ? [value] : []}\n        onItemOpen={setValue}\n        onItemClose={React.useCallback(() => collapsible && setValue(''), [collapsible, setValue])}\n      >\n        <AccordionCollapsibleProvider scope={props.__scopeAccordion} collapsible={collapsible}>\n          <AccordionImpl {...accordionSingleProps} ref={forwardedRef} />\n        </AccordionCollapsibleProvider>\n      </AccordionValueProvider>\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype AccordionImplMultipleElement = AccordionImplElement;\ninterface AccordionImplMultipleProps extends AccordionImplProps {\n  /**\n   * The controlled stateful value of the accordion items whose contents are expanded.\n   */\n  value?: string[];\n  /**\n   * The value of the items whose contents are expanded when the accordion is initially rendered. Use\n   * `defaultValue` if you do not need to control the state of an accordion.\n   */\n  defaultValue?: string[];\n  /**\n   * The callback that fires when the state of the accordion changes.\n   */\n  onValueChange?(value: string[]): void;\n}\n\nconst AccordionImplMultiple = React.forwardRef<\n  AccordionImplMultipleElement,\n  AccordionImplMultipleProps\n>((props: ScopedProps<AccordionImplMultipleProps>, forwardedRef) => {\n  const {\n    value: valueProp,\n    defaultValue,\n    onValueChange = () => {},\n    ...accordionMultipleProps\n  } = props;\n\n  const [value = [], setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange,\n  });\n\n  const handleItemOpen = React.useCallback(\n    (itemValue: string) => setValue((prevValue = []) => [...prevValue, itemValue]),\n    [setValue]\n  );\n\n  const handleItemClose = React.useCallback(\n    (itemValue: string) =>\n      setValue((prevValue = []) => prevValue.filter((value) => value !== itemValue)),\n    [setValue]\n  );\n\n  return (\n    <AccordionValueProvider\n      scope={props.__scopeAccordion}\n      value={value}\n      onItemOpen={handleItemOpen}\n      onItemClose={handleItemClose}\n    >\n      <AccordionCollapsibleProvider scope={props.__scopeAccordion} collapsible={true}>\n        <AccordionImpl {...accordionMultipleProps} ref={forwardedRef} />\n      </AccordionCollapsibleProvider>\n    </AccordionValueProvider>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype AccordionImplContextValue = {\n  disabled?: boolean;\n  direction: AccordionImplProps['dir'];\n  orientation: AccordionImplProps['orientation'];\n};\n\nconst [AccordionImplProvider, useAccordionContext] =\n  createAccordionContext<AccordionImplContextValue>(ACCORDION_NAME);\n\ntype AccordionImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface AccordionImplProps extends PrimitiveDivProps {\n  /**\n   * Whether or not an accordion is disabled from user interaction.\n   *\n   * @defaultValue false\n   */\n  disabled?: boolean;\n  /**\n   * The layout in which the Accordion operates.\n   * @default vertical\n   */\n  orientation?: React.AriaAttributes['aria-orientation'];\n  /**\n   * The language read direction.\n   */\n  dir?: Direction;\n}\n\nconst AccordionImpl = React.forwardRef<AccordionImplElement, AccordionImplProps>(\n  (props: ScopedProps<AccordionImplProps>, forwardedRef) => {\n    const { __scopeAccordion, disabled, dir, orientation = 'vertical', ...accordionProps } = props;\n    const accordionRef = React.useRef<AccordionImplElement>(null);\n    const composedRefs = useComposedRefs(accordionRef, forwardedRef);\n    const getItems = useCollection(__scopeAccordion);\n    const direction = useDirection(dir);\n    const isDirectionLTR = direction === 'ltr';\n\n    const handleKeyDown = composeEventHandlers(props.onKeyDown, (event) => {\n      if (!ACCORDION_KEYS.includes(event.key)) return;\n      const target = event.target as HTMLElement;\n      const triggerCollection = getItems().filter((item) => !item.ref.current?.disabled);\n      const triggerIndex = triggerCollection.findIndex((item) => item.ref.current === target);\n      const triggerCount = triggerCollection.length;\n\n      if (triggerIndex === -1) return;\n\n      // Prevents page scroll while user is navigating\n      event.preventDefault();\n\n      let nextIndex = triggerIndex;\n      const homeIndex = 0;\n      const endIndex = triggerCount - 1;\n\n      const moveNext = () => {\n        nextIndex = triggerIndex + 1;\n        if (nextIndex > endIndex) {\n          nextIndex = homeIndex;\n        }\n      };\n\n      const movePrev = () => {\n        nextIndex = triggerIndex - 1;\n        if (nextIndex < homeIndex) {\n          nextIndex = endIndex;\n        }\n      };\n\n      switch (event.key) {\n        case 'Home':\n          nextIndex = homeIndex;\n          break;\n        case 'End':\n          nextIndex = endIndex;\n          break;\n        case 'ArrowRight':\n          if (orientation === 'horizontal') {\n            if (isDirectionLTR) {\n              moveNext();\n            } else {\n              movePrev();\n            }\n          }\n          break;\n        case 'ArrowDown':\n          if (orientation === 'vertical') {\n            moveNext();\n          }\n          break;\n        case 'ArrowLeft':\n          if (orientation === 'horizontal') {\n            if (isDirectionLTR) {\n              movePrev();\n            } else {\n              moveNext();\n            }\n          }\n          break;\n        case 'ArrowUp':\n          if (orientation === 'vertical') {\n            movePrev();\n          }\n          break;\n      }\n\n      const clampedIndex = nextIndex % triggerCount;\n      triggerCollection[clampedIndex].ref.current?.focus();\n    });\n\n    return (\n      <AccordionImplProvider\n        scope={__scopeAccordion}\n        disabled={disabled}\n        direction={dir}\n        orientation={orientation}\n      >\n        <Collection.Slot scope={__scopeAccordion}>\n          <Primitive.div\n            {...accordionProps}\n            data-orientation={orientation}\n            ref={composedRefs}\n            onKeyDown={disabled ? undefined : handleKeyDown}\n          />\n        </Collection.Slot>\n      </AccordionImplProvider>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'AccordionItem';\n\ntype AccordionItemContextValue = { open?: boolean; disabled?: boolean; triggerId: string };\nconst [AccordionItemProvider, useAccordionItemContext] =\n  createAccordionContext<AccordionItemContextValue>(ITEM_NAME);\n\ntype AccordionItemElement = React.ElementRef<typeof CollapsiblePrimitive.Root>;\ntype CollapsibleProps = Radix.ComponentPropsWithoutRef<typeof CollapsiblePrimitive.Root>;\ninterface AccordionItemProps\n  extends Omit<CollapsibleProps, 'open' | 'defaultOpen' | 'onOpenChange'> {\n  /**\n   * Whether or not an accordion item is disabled from user interaction.\n   *\n   * @defaultValue false\n   */\n  disabled?: boolean;\n  /**\n   * A string value for the accordion item. All items within an accordion should use a unique value.\n   */\n  value: string;\n}\n\n/**\n * `AccordionItem` contains all of the parts of a collapsible section inside of an `Accordion`.\n */\nconst AccordionItem = React.forwardRef<AccordionItemElement, AccordionItemProps>(\n  (props: ScopedProps<AccordionItemProps>, forwardedRef) => {\n    const { __scopeAccordion, value, ...accordionItemProps } = props;\n    const accordionContext = useAccordionContext(ITEM_NAME, __scopeAccordion);\n    const valueContext = useAccordionValueContext(ITEM_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    const triggerId = useId();\n    const open = (value && valueContext.value.includes(value)) || false;\n    const disabled = accordionContext.disabled || props.disabled;\n\n    return (\n      <AccordionItemProvider\n        scope={__scopeAccordion}\n        open={open}\n        disabled={disabled}\n        triggerId={triggerId}\n      >\n        <CollapsiblePrimitive.Root\n          data-orientation={accordionContext.orientation}\n          data-state={getState(open)}\n          {...collapsibleScope}\n          {...accordionItemProps}\n          ref={forwardedRef}\n          disabled={disabled}\n          open={open}\n          onOpenChange={(open) => {\n            if (open) {\n              valueContext.onItemOpen(value);\n            } else {\n              valueContext.onItemClose(value);\n            }\n          }}\n        />\n      </AccordionItemProvider>\n    );\n  }\n);\n\nAccordionItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionHeader\n * -----------------------------------------------------------------------------------------------*/\n\nconst HEADER_NAME = 'AccordionHeader';\n\ntype AccordionHeaderElement = React.ElementRef<typeof Primitive.h3>;\ntype PrimitiveHeading3Props = Radix.ComponentPropsWithoutRef<typeof Primitive.h3>;\ninterface AccordionHeaderProps extends PrimitiveHeading3Props {}\n\n/**\n * `AccordionHeader` contains the content for the parts of an `AccordionItem` that will be visible\n * whether or not its content is collapsed.\n */\nconst AccordionHeader = React.forwardRef<AccordionHeaderElement, AccordionHeaderProps>(\n  (props: ScopedProps<AccordionHeaderProps>, forwardedRef) => {\n    const { __scopeAccordion, ...headerProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(HEADER_NAME, __scopeAccordion);\n    return (\n      <Primitive.h3\n        data-orientation={accordionContext.orientation}\n        data-state={getState(itemContext.open)}\n        data-disabled={itemContext.disabled ? '' : undefined}\n        {...headerProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nAccordionHeader.displayName = HEADER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'AccordionTrigger';\n\ntype AccordionTriggerElement = React.ElementRef<typeof CollapsiblePrimitive.Trigger>;\ntype CollapsibleTriggerProps = Radix.ComponentPropsWithoutRef<typeof CollapsiblePrimitive.Trigger>;\ninterface AccordionTriggerProps extends CollapsibleTriggerProps {}\n\n/**\n * `AccordionTrigger` is the trigger that toggles the collapsed state of an `AccordionItem`. It\n * should always be nested inside of an `AccordionHeader`.\n */\nconst AccordionTrigger = React.forwardRef<AccordionTriggerElement, AccordionTriggerProps>(\n  (props: ScopedProps<AccordionTriggerProps>, forwardedRef) => {\n    const { __scopeAccordion, ...triggerProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(TRIGGER_NAME, __scopeAccordion);\n    const collapsibleContext = useAccordionCollapsibleContext(TRIGGER_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    return (\n      <Collection.ItemSlot scope={__scopeAccordion}>\n        <CollapsiblePrimitive.Trigger\n          aria-disabled={(itemContext.open && !collapsibleContext.collapsible) || undefined}\n          data-orientation={accordionContext.orientation}\n          id={itemContext.triggerId}\n          {...collapsibleScope}\n          {...triggerProps}\n          ref={forwardedRef}\n        />\n      </Collection.ItemSlot>\n    );\n  }\n);\n\nAccordionTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'AccordionContent';\n\ntype AccordionContentElement = React.ElementRef<typeof CollapsiblePrimitive.Content>;\ntype CollapsibleContentProps = Radix.ComponentPropsWithoutRef<typeof CollapsiblePrimitive.Content>;\ninterface AccordionContentProps extends CollapsibleContentProps {}\n\n/**\n * `AccordionContent` contains the collapsible content for an `AccordionItem`.\n */\nconst AccordionContent = React.forwardRef<AccordionContentElement, AccordionContentProps>(\n  (props: ScopedProps<AccordionContentProps>, forwardedRef) => {\n    const { __scopeAccordion, ...contentProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(CONTENT_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    return (\n      <CollapsiblePrimitive.Content\n        role=\"region\"\n        aria-labelledby={itemContext.triggerId}\n        data-orientation={accordionContext.orientation}\n        {...collapsibleScope}\n        {...contentProps}\n        ref={forwardedRef}\n        style={{\n          ['--radix-accordion-content-height' as any]: 'var(--radix-collapsible-content-height)',\n          ['--radix-accordion-content-width' as any]: 'var(--radix-collapsible-content-width)',\n          ...props.style,\n        }}\n      />\n    );\n  }\n);\n\nAccordionContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open?: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Accordion;\nconst Item = AccordionItem;\nconst Header = AccordionHeader;\nconst Trigger = AccordionTrigger;\nconst Content = AccordionContent;\n\nexport {\n  createAccordionScope,\n  //\n  Accordion,\n  AccordionItem,\n  AccordionHeader,\n  AccordionTrigger,\n  AccordionContent,\n  //\n  Root,\n  Item,\n  Header,\n  Trigger,\n  Content,\n};\nexport type {\n  AccordionSingleProps,\n  AccordionMultipleProps,\n  AccordionItemProps,\n  AccordionHeaderProps,\n  AccordionTriggerProps,\n  AccordionContentProps,\n};\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ui/Accordion.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ui/Accordion.tsx\");\n  import.meta.hot.lastModified = \"1706454925342.808\";\n}\n// REMIX HMR END\n\nimport { AccordionContentShad, AccordionItemShad, AccordionShad, AccordionTriggerShad } from '~/components/ui/shadUi/ui/accordion';\nexport function Accordion({\n  rows\n}) {\n  return <AccordionShad type=\"single\" collapsible className=\"w-full\">\n      {rows.map((row, index) => <AccordionItemShad value={'item-' + index} key={index}>\n          <AccordionTriggerShad>{row.trigger}</AccordionTriggerShad>\n          <AccordionContentShad>{row.content}</AccordionContentShad>\n        </AccordionItemShad>)}\n    </AccordionShad>;\n}\n_c = Accordion;\nvar _c;\n$RefreshReg$(_c, \"Accordion\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/page/createOrg/OrgRolesDialog.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/page/createOrg/OrgRolesDialog.tsx\");\n  import.meta.hot.lastModified = \"1705519263361.1746\";\n}\n// REMIX HMR END\n\nimport { Accordion } from '~/components/ui/Accordion';\nimport { Dialog } from '~/components/ui/Dialog';\nimport { secondaryText, tableHeader } from '~/styles/typography';\nexport const OrgRolesDialog = ({\n  openDialog,\n  setOpenDialog\n}) => {\n  return <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\n      <h3 className={`${tableHeader}`}>Roles</h3>\n      <div className={`${secondaryText}`}>\n        Roles help set up permissions in a consistent way, which helps keep your\n        workspace secure and compliant. Each role has read-only access to\n        features not listed below.\n      </div>\n      <Accordion rows={[{\n      trigger: <div>Organisation Owner</div>,\n      content: <ul className=\"list-disc pl-5\">\n                <li>Full access to organisation</li>\n              </ul>\n    }, {\n      trigger: <div>Organisation Admin</div>,\n      content: <ul className=\"list-disc\tpl-5\">\n                <li>\n                  Ability to update the organisation details (icon and name).\n                </li>\n                <li>Ability to manage user\u2019s status and roles.</li>\n              </ul>\n    }, {\n      trigger: <div>Asset Manager</div>,\n      content: <ul className=\"list-disc\tpl-5\">\n                <li>Access to assets.</li>\n                <li>Ability to manage assets (create, update and delete).</li>\n              </ul>\n    }, {\n      trigger: <div>Inspection Admin</div>,\n      content: <ul className=\"list-disc\tpl-5\">\n                <li>Access to inspections.</li>\n                <li>\n                  Ability to manage inspections (create, edit templates and\n                  delete templates).{' '}\n                </li>\n              </ul>\n    }, {\n      trigger: <div>Inspector</div>,\n      content: <ul className=\"list-disc\tpl-5\">\n                <li>Access to inspections.</li>\n                <li>Ability to carry out inspections.</li>\n              </ul>\n    }, {\n      trigger: <div>Defect Admin</div>,\n      content: <ul className=\"list-disc\tpl-5\">\n                <li>Access to defects.</li>\n                <li>Ability to configure, raise, and review defects.</li>\n              </ul>\n    }, {\n      trigger: <div>Maintenance Manager</div>,\n      content: <ul className=\"list-disc\tpl-5\">\n                <li>Access to maintenance.</li>\n                <li>Ability to allocate maintenance tasks.</li>\n              </ul>\n    }, {\n      trigger: <div>Maintenance Engineer</div>,\n      content: <ul className=\"list-disc\tpl-5\">\n                <li>Access to maintenance.</li>\n                <li>Ability to carry out maintenance.</li>\n                <li>Ability to close out defects.</li>\n              </ul>\n    }]} />\n    </Dialog>;\n};\n_c = OrgRolesDialog;\nvar _c;\n$RefreshReg$(_c, \"OrgRolesDialog\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/page/createOrg/CreateOrgPageOverview.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/page/createOrg/CreateOrgPageOverview.tsx\");\n  import.meta.hot.lastModified = \"1705519263360.9976\";\n}\n// REMIX HMR END\n\nimport { Avatar } from '~/components/ui/Avatar';\nimport Button from '~/components/ui/Button';\nimport { Icon } from '~/components/ui/Icon';\nimport { TextArea } from '~/components/ui/TextArea';\nimport { importantText, subPageTitle } from '~/styles/typography';\nexport const CreateOrgPageOverview = ({\n  name,\n  description,\n  goPage,\n  imagePathLocal,\n  emails\n}) => {\n  return <>\n      <div className={`${subPageTitle}`}>Preview</div>\n      <div className=\"flex items-center py-5\">\n        <Avatar className=\"h-14 w-14\" imageSrc={imagePathLocal} fallbackText={name[0]} />\n        <div className=\"flex flex-col pl-4\">\n          <div className={`${importantText}`}>{name}</div>\n        </div>\n      </div>\n      <div className=\"relative mt-8 h-24 w-full\">\n        <TextArea name={'demoDescription'} disabled onChange={() => {}} label={'Description'} value={description} noPadding className=\"absolute \" />\n        <div className=\"flex w-full flex-row-reverse\">\n          <Button className=\"absolute  mt-[-1.2rem] h-8 w-8 \" variant=\"outline\" noPadding onClick={() => {\n          goPage(0);\n        }}>\n            <Icon className=\" h-4 w-4\" icon=\"edit\" />\n          </Button>\n        </div>\n      </div>\n      <div className=\"relative mt-8 h-24 w-full\">\n        <TextArea name={'demoDescription'} disabled onChange={() => {}} label={'Invited Team Members'} value={emails.join(',')} noPadding className=\"absolute \" />\n        <div className=\"flex w-full flex-row-reverse\">\n          <Button className=\"absolute mt-[-1.2rem] h-8 w-8\" variant=\"outline\" noPadding onClick={() => {\n          goPage(2);\n        }}>\n            <Icon className=\" h-4 w-4\" icon=\"edit\" />\n          </Button>\n        </div>\n      </div>\n    </>;\n};\n_c = CreateOrgPageOverview;\nvar _c;\n$RefreshReg$(_c, \"CreateOrgPageOverview\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "PROGRESS_NAME", "DEFAULT_MAX", "createProgressContext", "createProgressScope", "createContextScope", "ProgressProvider", "useProgressContext", "Progress", "React", "props", "forwardedRef", "value", "valueProp", "max", "maxProp", "defaultGetValueLabel", "progressProps", "isValidMaxNumber", "isValidValueNumber", "valueLabel", "isNumber", "getValueLabel", "undefined", "$k03wI$createElement", "__scopeProgress", "getProgressState", "Progress", "propTypes", "max", "props", "propName", "componentName", "propValue", "strVal", "String", "isValidMaxNumber", "Error", "getInvalidMaxError", "value", "valueProp", "DEFAULT_MAX", "isValidValueNumber", "getInvalidValueError", "INDICATOR_NAME", "ProgressIndicator", "React", "forwardedRef", "indicatorProps", "context", "useProgressContext", "__scopeProgress", "$k03wI$createElement", "getProgressState", "undefined", "defaultGetValueLabel", "value", "max", "Math", "round", "getProgressState", "maxValue", "isNumber", "isValidMaxNumber", "isNaN", "isValidValueNumber", "getInvalidMaxError", "propValue", "componentName", "DEFAULT_MAX", "getInvalidValueError", "Root", "Progress", "Indicator", "ProgressIndicator", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "country", "_c", "import_jsx_dev_runtime", "_c", "import_react", "React", "COLLAPSIBLE_NAME", "createCollapsibleContext", "createCollapsibleScope", "createContextScope", "CollapsibleProvider", "useCollapsibleContext", "Collapsible", "React", "props", "forwardedRef", "open", "openProp", "collapsibleProps", "setOpen", "useControllableState", "prop", "defaultProp", "defaultOpen", "onChange", "onOpenChange", "$73KQ4$createElement", "__scopeCollapsible", "useId", "prevOpen", "getState", "disabled", "undefined", "TRIGGER_NAME", "CollapsibleTrigger", "React", "props", "forwardedRef", "triggerProps", "context", "useCollapsibleContext", "__scopeCollapsible", "$73KQ4$createElement", "contentId", "open", "getState", "disabled", "undefined", "composeEventHandlers", "onClick", "onOpenToggle", "CONTENT_NAME", "CollapsibleContent", "React", "props", "forwardedRef", "contentProps", "context", "useCollapsibleContext", "__scopeCollapsible", "$73KQ4$createElement", "forceMount", "open", "present", "CollapsibleContentImpl", "React", "props", "forwardedRef", "contentProps", "context", "useCollapsibleContext", "CONTENT_NAME", "__scopeCollapsible", "isPresent", "setIsPresent", "present", "ref", "composedRefs", "useComposedRefs", "heightRef", "height", "current", "widthRef", "width", "isOpen", "open", "isMountAnimationPreventedRef", "originalStylesRef", "rAF", "requestAnimationFrame", "cancelAnimationFrame", "useLayoutEffect", "node", "transitionDuration", "style", "animationName", "rect", "getBoundingClientRect", "$73KQ4$createElement", "getState", "disabled", "undefined", "contentId", "children", "Root", "Collapsible", "Trigger", "CollapsibleTrigger", "Content", "CollapsibleContent", "ACCORDION_NAME", "ACCORDION_KEYS", "Collection", "useCollection", "createCollectionScope", "createCollection", "createAccordionContext", "createAccordionScope", "createContextScope", "createCollapsibleScope", "useCollapsibleScope", "Accordion", "React", "forwardRef", "props", "forwardedRef", "accordionProps", "singleProps", "multipleProps", "$3DjNB$react", "__scopeAccordion", "type", "Accordion", "propTypes", "type", "props", "value", "defaultValue", "includes", "Error", "Array", "isArray", "AccordionValueProvider", "useAccordionValueContext", "createAccordionContext", "ACCORDION_NAME", "AccordionCollapsibleProvider", "useAccordionCollapsibleContext", "collapsible", "AccordionImplSingle", "React", "forwardRef", "forwardedRef", "valueProp", "accordionSingleProps", "setValue", "useControllableState", "prop", "defaultProp", "onChange", "onValueChange", "$3DjNB$react", "__scopeAccordion", "useCallback", "AccordionImplMultiple", "accordionMultipleProps", "handleItemOpen", "itemValue", "prevValue", "handleItemClose", "filter", "AccordionImplProvider", "useAccordionContext", "AccordionImpl", "accordionProps", "accordionRef", "useRef", "composedRefs", "useComposedRefs", "getItems", "useCollection", "direction", "useDirection", "dir", "isDirectionLTR", "handleKeyDown", "composeEventHandlers", "onKeyDown", "event", "ACCORDION_KEYS", "key", "target", "triggerCollection", "item", "ref", "current", "disabled", "triggerIndex", "findIndex", "triggerCount", "length", "preventDefault", "nextIndex", "homeIndex", "endIndex", "moveNext", "movePrev", "orientation", "clampedIndex", "focus", "undefined", "ITEM_NAME", "AccordionItemProvider", "useAccordionItemContext", "AccordionItem", "accordionItemProps", "accordionContext", "valueContext", "collapsibleScope", "useCollapsibleScope", "triggerId", "useId", "open", "getState", "onItemOpen", "onItemClose", "HEADER_NAME", "AccordionHeader", "React", "forwardRef", "props", "forwardedRef", "headerProps", "accordionContext", "useAccordionContext", "ACCORDION_NAME", "__scopeAccordion", "itemContext", "useAccordionItemContext", "$3DjNB$react", "orientation", "getState", "open", "disabled", "undefined", "TRIGGER_NAME", "AccordionTrigger", "React", "forwardRef", "props", "forwardedRef", "triggerProps", "accordionContext", "useAccordionContext", "ACCORDION_NAME", "__scopeAccordion", "itemContext", "useAccordionItemContext", "collapsibleContext", "useAccordionCollapsibleContext", "collapsibleScope", "useCollapsibleScope", "$3DjNB$react", "open", "collapsible", "undefined", "orientation", "triggerId", "CONTENT_NAME", "AccordionContent", "React", "forwardRef", "props", "forwardedRef", "contentProps", "accordionContext", "useAccordionContext", "ACCORDION_NAME", "__scopeAccordion", "itemContext", "useAccordionItemContext", "collapsibleScope", "useCollapsibleScope", "$3DjNB$react", "triggerId", "orientation", "style", "getState", "open", "Root", "Accordion", "Item", "AccordionItem", "Header", "AccordionHeader", "Trigger", "AccordionTrigger", "Content", "AccordionContent", "import_jsx_dev_runtime", "_c", "_c2", "_c3", "_c4", "_c5", "_c6", "_c", "_c2", "_c3", "_c4", "_c5", "_c6", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "index", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_s", "_s", "page", "_c"]
}
