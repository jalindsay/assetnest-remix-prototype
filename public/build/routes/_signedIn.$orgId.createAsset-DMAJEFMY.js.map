{
  "version": 3,
  "sources": ["../../../app/routes/_signedIn.$orgId.createAsset.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_signedIn.$orgId.createAsset.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_signedIn.$orgId.createAsset.tsx\");\n  import.meta.hot.lastModified = \"1706454925357.7673\";\n}\n// REMIX HMR END\n\nimport { redirect } from '@remix-run/node';\nimport { useActionData, useLoaderData } from '@remix-run/react';\nimport { useState } from 'react';\nimport { pageTitle } from '~/styles/typography';\nimport { v4 as uuid } from 'uuid';\nimport { getAssetsCategoriesData } from '~/endpoints/assetCategory';\nimport { getAssetWithAssetIdAndOrgId } from '~/endpoints/asset';\nimport { getSession } from '~/cookies';\nimport { getStorageClient } from '~/utils/storageClient';\nimport { CreateEditAsset } from '~/components/page/createEditAsset/CreateEditAsset';\nimport { createAssetFromForm } from '~/utils/assetActions/createAssetFromForm';\nexport async function action({\n  request,\n  params\n}) {\n  const body = await request.formData();\n  const assetName = body.get('Asset Name');\n  const assetID = body.get('Asset ID');\n  const session = await getSession(request.headers.get('Cookie'));\n  const userId = session.get('userId');\n  let assetNameError = '';\n  let assetIDError = '';\n  const assetAlreadyExistWithThatAssetID = await getAssetWithAssetIdAndOrgId({\n    assetId: assetID,\n    orgId: parseInt(params.orgId ?? '')\n  });\n  if (assetName === '') {\n    assetNameError = 'Asset Name is required';\n  }\n  if (assetID === '') {\n    assetIDError = 'Asset ID is required';\n  } else if (assetAlreadyExistWithThatAssetID.length !== 0) {\n    assetIDError = 'Asset ID must be unique';\n  }\n  if (assetNameError !== '' || assetIDError !== '') {\n    return {\n      assetNameError,\n      assetIDError\n    };\n  }\n  await createAssetFromForm({\n    body: body,\n    userId: userId ?? -1,\n    orgId: parseInt(params.orgId ?? '')\n  });\n  return redirect('/' + (params.orgId ?? '') + '/assetList');\n}\nexport const loader = async () => {\n  const assetCategoriesData = await getAssetsCategoriesData();\n  return {\n    assetCategoriesData,\n    STORAGE_URL: process.env.STORAGE_URL,\n    SUPABASE_SERVICE_ROLE_KEY: process.env.SUPABASE_SERVICE_ROLE_KEY,\n    mapApiKey: process.env.MAP_API_KEY\n  };\n};\nexport default function CreateAsset() {\n  _s();\n  const loaderData = useLoaderData();\n  const actionData = useActionData();\n  const storageClient = getStorageClient(loaderData.STORAGE_URL ?? '', loaderData.SUPABASE_SERVICE_ROLE_KEY ?? '');\n  const [assetPropertyValues, setAssetPropertyValues] = useState({\n    'Platform ID': uuid()\n  });\n  const [selectedAssetCategoryId, setSelectedAssetCategoryId] = useState(loaderData.assetCategoriesData.find(assetCategory => assetCategory.name === 'Default')?.id);\n  const [imagesToDisplay, setImagesToDisplay] = useState([]);\n  const [imagesStoragePathData, setImagesStorageString] = useState([]);\n  return <div className=\"self-start py-4 md:py-8\">\n      <div className=\" text-gray-500\">\n        Asset / <span className=\" font-semibold underline\">New Asset</span>\n      </div>\n      <h1 className={`${pageTitle} p-1`}>New Asset</h1>\n      <CreateEditAsset assetCategoriesData={loaderData.assetCategoriesData} assetNameError={actionData?.assetNameError ?? ''} assetIDError={actionData?.assetIDError ?? ''} assetPropertyValues={assetPropertyValues} setAssetPropertyValues={setAssetPropertyValues} setSelectedAssetCategoryId={setSelectedAssetCategoryId} selectedAssetCategoryId={selectedAssetCategoryId} imagesToDisplay={imagesToDisplay} imagesStoragePathData={imagesStoragePathData} storageClient={storageClient} setImagesStorageString={setImagesStorageString} setImagesToDisplay={setImagesToDisplay} mapApiKey={loaderData.mapApiKey ?? ''} />\n    </div>;\n}\n_s(CreateAsset, \"EjwzCJAH65jkv2c0MfiX3wyHzGY=\", false, function () {\n  return [useLoaderData, useActionData];\n});\n_c = CreateAsset;\nvar _c;\n$RefreshReg$(_c, \"CreateAsset\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAyB;AAEzB,IAAAA,gBAAyB;AAmET;AAzFhB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kDAAoD,EAAE;AAAA,EAC/F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA6C;AAC7C,cAAY,IAAI,eAAe;AACjC;AA2De,SAAR,cAA+B;AA7EtC,cAAAC,KAAA;AA8EE,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,QAAM,aAAa,cAAc;AACjC,QAAM,gBAAgB,kBAAiB,gBAAW,gBAAX,YAA0B,KAAI,gBAAW,8BAAX,YAAwC,EAAE;AAC/G,QAAM,CAAC,qBAAqB,sBAAsB,QAAI,wBAAS;AAAA,IAC7D,eAAe,WAAK;AAAA,EACtB,CAAC;AACD,QAAM,CAAC,yBAAyB,0BAA0B,QAAI,yBAASA,MAAA,WAAW,oBAAoB,KAAK,mBAAiB,cAAc,SAAS,SAAS,MAArF,gBAAAA,IAAwF,EAAE;AACjK,QAAM,CAAC,iBAAiB,kBAAkB,QAAI,wBAAS,CAAC,CAAC;AACzD,QAAM,CAAC,uBAAuB,sBAAsB,QAAI,wBAAS,CAAC,CAAC;AACnE,SAAO,mDAAC,SAAI,WAAU,2BAClB;AAAA,uDAAC,SAAI,WAAU,kBAAiB;AAAA;AAAA,MACtB,mDAAC,UAAK,WAAU,4BAA2B,yBAA3C;AAAA;AAAA;AAAA;AAAA,aAAoD;AAAA,SAD9D;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,QAAG,WAAW,GAAG,iBAAiB,yBAAnC;AAAA;AAAA;AAAA;AAAA,WAA4C;AAAA,IAC5C,mDAAC,mBAAgB,qBAAqB,WAAW,qBAAqB,iBAAgB,8CAAY,mBAAZ,YAA8B,IAAI,eAAc,8CAAY,iBAAZ,YAA4B,IAAI,qBAA0C,wBAAgD,4BAAwD,yBAAkD,iBAAkC,uBAA8C,eAA8B,wBAAgD,oBAAwC,YAAW,gBAAW,cAAX,YAAwB,MAAnlB;AAAA;AAAA;AAAA;AAAA,WAAulB;AAAA,OALplB;AAAA;AAAA;AAAA;AAAA,SAML;AACJ;AACA,GAAG,aAAa,gCAAgC,OAAO,WAAY;AACjE,SAAO,CAAC,eAAe,aAAa;AACtC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,aAAa;AAE9B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react", "_c"]
}
