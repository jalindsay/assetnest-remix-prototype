{
  "version": 3,
  "sources": ["../../../app/routes/_signedIn.signOut.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_signedIn.signOut.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_signedIn.signOut.tsx\");\n  import.meta.hot.lastModified = \"1700413891165.94\";\n}\n// REMIX HMR END\n\nimport { redirect } from '@remix-run/node';\nimport { commitSession, getSession } from '~/cookies';\nexport const loader = async ({\n  request\n}) => {\n  // Read session from cookie\n  const session = await getSession(request.headers.get('Cookie'));\n  // Create new cookie string\n  session.unset('userId');\n  const cookie = await commitSession(session);\n  return redirect('/profile', {\n    status: 302,\n    headers: {\n      'Set-Cookie': cookie\n    }\n  });\n};\nconst SignOut = () => {\n  return <></>;\n};\n_c = SignOut;\nexport default SignOut;\nvar _c;\n$RefreshReg$(_c, \"SignOut\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;AAoBA,kBAAyB;AAkBhB;AArCT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,uCAAyC,EAAE;AAAA,EACpF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAkC;AAClC,cAAY,IAAI,eAAe;AACjC;AAoBA,IAAM,UAAU,MAAM;AACpB,SAAO;AAAA;AAAA;AAAA;AAAA,SAAE;AACX;AACA,KAAK;AACL,IAAO,2BAAQ;AACf,IAAI;AACJ,aAAa,IAAI,SAAS;AAE1B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
